{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6CAIwB;AAJxB;;AACA;;AACA;;AAEe,SAAS,uBAAuB,MAAM;IACjD,OAAO,CAAC;QACJ,MAAM,UAAU,IAAI,CAAA,GAAA,uBAAO,AAAD,EAAE,KAAK;QACjC,MAAM,UAAU,IAAI,CAAA,GAAA,uBAAO,AAAD,EAAE,KAAK;QAEjC,IAAI,QAAQ,MAAM,CAAC,OAAO,EACtB,CAAA,GAAA,uBAAO,AAAD,EAAE,KAAK,SAAS,QAAQ,MAAM,CAAC,OAAO;QAGhD,OAAO;YACH,MAAM;YACN,MAAM,QAAQ,IAAI,CAAC,IAAI,CAAC;YACxB,MAAM,QAAQ,IAAI,CAAC,IAAI,CAAC;YACxB,QAAQ,QAAQ,MAAM,CAAC,IAAI,CAAC;YAC5B,MAAM,QAAQ,IAAI,CAAC,IAAI,CAAC;YACxB,MAAM,QAAQ,IAAI,CAAC,IAAI,CAAC;YACxB,OAAO,QAAQ,KAAK,CAAC,IAAI,CAAC;YAC1B,OAAO,QAAQ,KAAK,CAAC,IAAI,CAAC;YAC1B,IAAI,UAAS;gBACT,OAAO,QAAQ,MAAM;YACzB;YACA,IAAI,UAAS;gBACT,OAAO,QAAQ,MAAM;YACzB;YACA,IAAI,UAAS;gBACT,OAAO,QAAQ,MAAM;YACzB;QACJ;IACJ;AACJ;AAEA,uBAAuB,KAAK,GAAG,CAAA,GAAA,uBAAO,AAAD,EAAE,KAAK;AAE5C,IAAI,OAAO,WAAW,aAClB,MAAM,CAAC,yBAAyB,GAAG;;;;;ACtCvC;AACA;;AAEe,MAAM;IACjB,YAAY,GAAG,EAAE,MAAM,CAAE;QACrB,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG;QAElC,IAAI,CAAC,KAAK,GAAG,YAAY,KAAK,EAAE,MAAM;QACtC,IAAI,CAAC,SAAS,GAAG,YAAY,SAAS,EAAE,QAAQ;QAChD,IAAI,CAAC,QAAQ,GAAG,SAAS,QAAQ,EAAE,QAAQ;QAC3C,IAAI,CAAC,OAAO,GAAG,SAAS,OAAO,EAAE,QAAQ;QAEzC,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,MAAM,GAAG,EAAE,EAAE,SAAS;QAC3B,IAAI,CAAC,KAAK,GAAG,EAAE,EAAE,SAAS;QAC1B,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,WAAW;QAC7B,IAAI,CAAC,KAAK,GAAG,EAAE,EAAE,WAAW;QAC5B,IAAI,CAAC,MAAM,GAAG,OAAO,OAAO;QAC5B,IAAI,CAAC,MAAM,GAAG,OAAO,OAAO;QAC5B,IAAI,CAAC,KAAK,GAAG,MAAM,MAAM;QACzB,IAAI,CAAC,MAAM,CAAC,SAAS,OAAO;QAE5B,+BAA+B;QAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,OAAO,IAAI,eAAe,CAAC,IAAI,KAAK;YAAC,CAAA,GAAA,sBAAU,AAAD;SAAE;QAElE,SAAS;QACT,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI;QACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;QAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI;QACjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI;QAErC,OAAO;QACP,IAAI,EAAE,CAAC,cAAc,IAAI,CAAC,KAAK;QAC/B,IAAI,EAAE,CAAC,iBAAiB,IAAI,CAAC,KAAK;QAClC,IAAI,EAAE,CAAC,eAAe,IAAI,CAAC,IAAI;QAC/B,IAAI,EAAE,CAAC,iBAAiB,IAAI,CAAC,IAAI;QACjC,IAAI,EAAE,CAAC,WAAW,IAAI,CAAC,OAAO;QAC9B,IAAI,EAAE,CAAC,UAAU,IAAI,CAAC,KAAK;QAE3B,SAAS;QACT,IAAI,CAAC,IAAI;IACb;IAEA,OAAO;IACP,WAAW,SAAS;QAChB,OAAO;YACH,SAAS,EAAE;YACX,OAAO;YACP,QAAQ;gBAAC;gBAAI;aAAM;YACnB,SAAS;YACT,OAAO;YACP,MAAM;YACN,OAAO;gBAAC;gBAAG;gBAAG;aAAE;YAChB,UAAU;YACV,aAAa;YACb,qBAAqB;YACrB,OAAO;YACP,SAAS;YACT,QAAQ,EAAE;YACV,QAAQ,IAAM;YACd,YAAY,IAAM;YAClB,eAAe,IAAM;YACrB,SAAS;YACT,WAAW;YACX,UAAU;YACV,OAAO;QACX;IACJ;IAEA,OAAO;IACP,WAAW,SAAS;QAChB,OAAO;YACH,SAAS;YACT,OAAO;YACP,QAAQ;YACR,SAAS;YACT,OAAO;YACP,MAAM;YACN,OAAO;YACP,UAAU;YACV,aAAa;YACb,qBAAqB;YACrB,OAAO;YACP,SAAS;YACT,QAAQ;YACR,QAAQ;YACR,YAAY;YACZ,eAAe;YACf,SAAS;YACT,WAAW;YACX,UAAU;YACV,OAAO;QACX;IACJ;IAEA,SAAS;IACT,WAAW,UAAU;QACjB,OAAO,CAAC;;;;;;;;;;;;;QAaR,CAAC;IACL;IAEA,gCAAgC;IAChC,IAAI,WAAW;QACX,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,iBAAiB;IAC9C;IAEA,UAAU;IACV,IAAI,YAAY;QACZ,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK;QAC5B,MAAM,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;QACnC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,OAAO;QAErC,IAAI,OAAO,UAAU,UACjB,OAAO,MAAM,OAAO,GAAG;QAG3B,IAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,CAAC,MAAM;YAClD,MAAM,QAAQ,WAAW,SAAS;YAClC,OAAO,MAAM,eAAe,OAAO,GAAG;QAC1C;QAEA,OAAO,QAAQ,MAAM,CAAC,MAAM,CAAC,EAAE;IACnC;IAEA,UAAU;IACV,IAAI,eAAe;QACf,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK;QAC5B,MAAM,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;QACnC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,OAAO;QAErC,IAAI,OAAO,UAAU,UACjB,OAAO,MAAM,OAAO,GAAG;QAG3B,IAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,CAAC,MAAM;YAClD,MAAM,QAAQ,WAAW,SAAS;YAClC,OAAO,MAAM,eAAe,OAAO,GAAG;QAC1C;QAEA,OAAO,QAAQ,MAAM,CAAC,MAAM,CAAC,EAAE;IACnC;IAEA,OAAO;IACP,MAAM,OAAO;QACT,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK;QAElC,IAAI;YACA,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,KAAK,YAC/B,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO;iBACpC,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,KAAK,YAC3C,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO;iBACpC,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,KAAK,UACtC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA,GAAA,mCAAyB,AAAD,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO;iBAEjE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO;YAGrC,YAAY,MAAM,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG;YAExC,IAAI,CAAC,KAAK,GAAG,EAAE,EAAE,WAAW;YAC5B,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,QAAQ;YACtC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,QAAU,IAAI,CAAC,IAAI,CAAC,SAAS,mBAAmB;YACrE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,iCAAiC,IAAI,CAAC,KAAK;QAEzD,qCAAqC;QACrC,2DAA2D;QAC/D,EAAE,OAAO,OAAO;YACZ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,gCAAgC;YAC9C,MAAM;QACV;QAEA,OAAO,IAAI;IACf;IAEA,eAAe;IACf,KAAK,KAAK,EAAE;QACR,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK;QAE5B,IAAI,CAAC,SAAS,CAAC,OAAO;YAClB,MAAM;YACN,MAAM;YACN,OAAO;YACP,MAAM;YACN,QAAQ;YACR,OAAO;YACP,QAAQ;QACZ;QAEA,cAAc;QACd,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,OAAO,IAAI;QAEnC,kBAAkB;QAClB,IAAI,CAAC;YAAC;YAAG;YAAG;SAAE,CAAC,QAAQ,CAAC,MAAM,IAAI,GAAG,OAAO,IAAI;QAEhD,YAAY;QACZ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,OAAO,IAAI;QAE3C,6BAA6B;QAC7B,IAAI,MAAM,IAAI,EACV,MAAM,IAAI,GAAG,MAAM,MAAM,IAAI,EAAE,GAAG;aAElC,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG;QAGxC,sBAAsB;QACtB,IAAI,MAAM,IAAI,KAAK,WACf,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI;QAGjC,uBAAuB;QACvB,IAAI,MAAM,KAAK,KAAK,WAChB,MAAM,KAAK,GAAG,CAAC;QAGnB,yCAAyC;QACzC,IAAI,MAAM,MAAM,KAAK,WACjB,MAAM,MAAM,GAAG;QAGnB,sBAAsB;QACtB,IAAI,MAAM,KAAK,KAAK,WAChB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK;QAGnC,YAAY;QACZ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YACZ,GAAG,KAAK;YACR,QAAQ;YACR,MAAM;YACN,WAAW;YACX,gBAAgB;QACpB;QAEA,WAAW;QACX,gCAAgC;QAChC,gCAAgC;QAChC,8BAA8B;QAC9B,gCAAgC;QAEhC,OAAO,IAAI;IACf;IAEA,OAAO;IACP,OAAO,MAAM,EAAE;QACX,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK;QAC5B,MAAM,EAAE,eAAe,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ;QAE7C,IAAI,CAAC,MAAM,GAAG,OAAO,MAAM,CAAC,CAAC,GAAG,QAAQ,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE;QAC7D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,MAAM;QAE1C,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG;QAC9C,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG;QAChD,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG;QACpD,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG;QACtD,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG;QACxD,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI;QAEzC,oBAAoB;QACpB,IAAI,OAAO,QAAQ,EAAE;YACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ;YAC5D,IAAI,CAAC,KAAK;QACd;QAEA,kBAAkB;QAClB,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EACnB,IAAI,CAAC,IAAI;aAET,IAAI,CAAC,IAAI;QAGb,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,iCAAiC,IAAI,CAAC,MAAM;QAE1D,OAAO,IAAI;IACf;IAEA,qBAAqB;IACrB,QAAQ,IAAI,EAAE;QACV,MAAM,OAAO,KAAK,qBAAqB;QACvC,OAAO,IAAI,CAAC,QAAQ,GAAG,KAAK,GAAG,GAAG,KAAK,IAAI;IAC/C;IAEA,YAAY;IACZ,SAAS;QACL,MAAM,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,MAAM,SAAS,aAAa,CAAC;QACxD,KAAK,KAAK,CAAC,OAAO,GAAG,QAAQ,OAAO;QACpC,KAAK,OAAO,CAAC,IAAI,GAAG;QACpB,OAAO;IACX;IAEA,WAAW;IACX,YAAY,QAAQ,EAAE;QAClB,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK;QAC5B,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,OAAO;QAErC,IAAI,OAAO,aAAa,UACpB,OAAO,MAAM,UAAU,IAAI;QAG/B,IAAI,OAAO,aAAa,YAAY,SAAS,QAAQ,CAAC,MAAM;YACxD,MAAM,QAAQ,WAAW,YAAY;YACrC,OAAO,MAAM,eAAe,OAAO,IAAI;QAC3C;QAEA,OAAO,QAAQ,MAAM,CAAC,QAAQ;IAClC;IAEA,YAAY;IACZ,YAAY,UAAU,CAAC,CAAC,EAAE;QACtB,OAAO,IAAI,QAAQ,CAAC;YAChB,QAAQ,EAAE,GAAG,KAAK,GAAG;YACrB,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC;gBACrB,MAAM,EAAE,IAAI,EAAE,GAAG;gBACjB,IAAI,KAAK,EAAE,KAAK,QAAQ,EAAE,EACtB,QAAQ;YAEhB;QACJ;IACJ;IAEA,kBAAkB;IAClB,OAAO,KAAK,EAAE,QAAQ,EAAE;QACpB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,QAAU,MAAM,MAAM,KAAK,OAAO,GAAG,CAAC;IACpE;IAEA,qDAAqD;IACrD,WAAW;QACP,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,GAAG;QAChC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACtB,OACI,MAAM,MAAM,KAAK,WAChB,MAAM,MAAM,KAAK,UAAU,cAAc,OAAO,MAAM,IAAI,IAAI,MAAM,IAAI,IAAI,cAAc;QAEnG;IACJ;IAEA,2BAA2B;IAC3B,WAAW;QACP,MAAM,SAAS,EAAE;QACjB,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,OAAO;QACpC,MAAM,aAAa,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO;QAE5C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YACjB,MAAM,MAAM,MAAM,IAAI,CAAC,SAAS;YAChC,MAAM,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI;YACxC,MAAM,SAAS,MAAM,IAAI,CAAC,YAAY;YACtC,MAAM,QAAQ,MAAM,IAAI,CAAC,WAAW;YACpC,MAAM,WAAW,OAAO;YACxB,MAAM,QAAQ,cAAc;YAC5B,MAAM,QAAQ,WAAW,MAAM,SAAS;YAExC,MAAM,OAAO,CAAC;YACd,KAAK,GAAG,GAAG;YACX,KAAK,IAAI,GAAG;YACZ,KAAK,MAAM,GAAG;YACd,KAAK,KAAK,GAAG;YACb,KAAK,KAAK,GAAG;YACb,KAAK,KAAK,GAAG;YACb,KAAK,QAAQ,GAAG;YAChB,KAAK,IAAI,GAAG,MAAM,SAAS;YAC3B,KAAK,IAAI,GAAG,MAAM,IAAI;YAEtB,OAAO,IAAI,CAAC;QAChB;QAEA,OAAO;IACX;IAEA,wBAAwB;IACxB,SAAS,KAAK,EAAE;QACZ,MAAM,MAAM,GAAG;QACf,IAAI,MAAM,IAAI,EAAE;YACZ,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,QAAQ,OAAO;YAC1C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,IAAI;YAC1B,MAAM,IAAI,GAAG;QACjB;IACJ;IAEA,SAAS;IACT,SAAS;QACL,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,KAAK;QAEhC,IAAI,CAAC,KAAK,GAAG,OAAO,qBAAqB,CAAC;YACtC,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAClC,gBAAgB;gBAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;oBACjB,MAAM,WAAW,AAAC,CAAA,KAAK,GAAG,KAAK,MAAM,cAAc,AAAD,IAAK;oBACvD,MAAM,SAAS,IAAI;oBACnB,MAAM,cAAc,GAAG,KAAK,GAAG;oBAC/B,YAAY;oBACZ,IAAI,MAAM,SAAS,IAAI,GACnB,IAAI,CAAC,QAAQ,CAAC;gBAEtB;gBAEA,iCAAiC;gBACjC,MAAM,SAAS,IAAI,CAAC,QAAQ;gBAC5B,IAAK,IAAI,QAAQ,GAAG,QAAQ,OAAO,MAAM,EAAE,QAAS;oBAChD,MAAM,QAAQ,MAAM,CAAC,MAAM;oBAE3B,YAAY;oBACZ,MAAM,QAAQ,MAAM,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;oBAE9C,IAAI,OAAO;wBACP,MAAM,EAAE,WAAW,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,OAAO;wBAClD,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,IAAI,YAAY;wBAExC,SAAS;wBACT,IAAI,MAAM,MAAM,EACZ,MAAM,IAAI,CAAC,SAAS,GAAG,MAAM,IAAI;6BAEjC,MAAM,IAAI,CAAC,SAAS,GAAG,MAAM,IAAI;wBAGrC,qBAAqB;wBACrB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,IAAI;wBAEpC,WAAW;wBACX,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE,YAAY,EAAE,CAAC;wBAC1C,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO;wBAC9C,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC;wBACvD,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,KAAK;wBACpC,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,MAAM,GAAG,CAAC,UAAU,EAAE,MAAM,KAAK,CAAC,CAAC,GAAG;wBACtE,MAAM,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,MAAM,MAAM,GAAG,qBAAqB;wBACvE,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG;wBAE9B,WAAW;wBACX,UAAU,MAAM,IAAI,EAAE,MAAM,KAAK;wBAEjC,UAAU;wBACV,MAAM,cAAc,GAAG,KAAK,GAAG;wBAE/B,WAAW;wBACX,MAAM,SAAS,GACX,IAAI,CAAC,MAAM,CAAC,mBAAmB,IAAI,IAAI,CAAC,GAAG,CAAC,YAAY,GAClD,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,OAAO,IAAI,CAAC,GAAG,CAAC,YAAY,IAChD,IAAI,CAAC,MAAM,CAAC,KAAK;wBAE3B,YAAY;wBACZ,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC;4BACnC,QAAQ;gCACJ,MAAM,MAAM,IAAI;gCAChB,QAAQ,MAAM,IAAI,CAAC,YAAY;gCAC/B,OAAO,AAAC,CAAA,cAAc,MAAM,IAAI,CAAC,WAAW,AAAD,IAAK,MAAM,SAAS;4BACnE;4BACA,OAAO,IAAI,CAAC,QAAQ;4BACpB,aAAa,IAAI,CAAC,MAAM,CAAC,WAAW;4BACpC,aAAa;4BACb,cAAc;4BACd,cAAc,IAAI,CAAC,YAAY;4BAC/B,WAAW,IAAI,CAAC,SAAS;wBAC7B;wBAEA,IAAI,MAAM,IAAI;4BACV,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,QAAQ,WAAW;gCACnC,MAAM,MAAM,GAAG,QAAQ,YAAY;gCACnC,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG;gCAC9B,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,IAAI,EAAE,gBAAgB;gCACtD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,kCAAkC;gCAEhD,OAAQ,MAAM,IAAI;oCACd,QAAQ;oCACR,KAAK;wCAAG;4CACJ,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC;4CACjC,MAAM,aAAa,cAAc,MAAM,IAAI,CAAC,WAAW;4CACvD,MAAM,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,WAAW,EAAE,CAAC,WAAW,GAAG,CAAC;4CAC3D,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,UAAU,EAAE,MAAM,SAAS,CAAC,WAAW,CAAC;4CACvE;wCACJ;oCACA,KAAK;oCACL,gBAAgB;oCAChB,KAAK;wCACD,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG;wCACxB,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC;wCACjC,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,EAAE,MAAM,IAAI,CAAC,WAAW,GAAG,EAAE,EAAE,CAAC;wCAChE;oCACJ;wCACI;gCACR;4BACJ,OAAO;gCACH,oDAAoD;gCACpD,MAAM,MAAM,GAAG;gCACf,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,IAAI;gCAC1B,MAAM,IAAI,GAAG;4BACjB;;oBAER;gBACJ;YACJ;YAEA,OAAO;YACP,IAAI,CAAC,IAAI,CAAC,MAAM,EACZ,IAAI,CAAC,MAAM;QAEnB;QACA,OAAO,IAAI;IACf;IAEA,OAAO;IACP,WAAW;QACP,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,OAAO;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YACjB,MAAM,MAAM,GAAG,QAAQ,YAAY;YACnC,MAAM,cAAc,GAAG,KAAK,GAAG;YAC/B,OAAQ,MAAM,IAAI;gBACd,UAAU;gBACV,KAAK;oBAAG;wBACJ,MAAM,aAAa,cAAc,MAAM,IAAI,CAAC,WAAW;wBACvD,MAAM,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,WAAW,EAAE,CAAC,WAAW,GAAG,CAAC;wBAC3D,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,UAAU,EAAE,MAAM,SAAS,CAAC,WAAW,CAAC;wBACvE;oBACJ;gBACA;oBACI;YACR;QACJ;QAEA,OAAO,IAAI;IACf;IAEA,OAAO;IACP,UAAU;QACN,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,OAAO;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YACjB,MAAM,MAAM,GAAG,QAAQ,YAAY;YACnC,OAAQ,MAAM,IAAI;gBACd,UAAU;gBACV,KAAK;oBAAG;wBACJ,MAAM,aAAa,cAAe,CAAA,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAA;wBACtF,MAAM,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,WAAW,EAAE,CAAC,WAAW,GAAG,CAAC;wBAC3D,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG;wBAC9B;oBACJ;gBACA;oBACI;YACR;QACJ;QAEA,OAAO,IAAI;IACf;IAEA,OAAO;QACH,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,OAAO;QACZ,OAAO,oBAAoB,CAAC,IAAI,CAAC,KAAK;QACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;QACd,OAAO,IAAI;IACf;IAEA,QAAQ;QACJ,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,QAAQ;QACb,IAAI,CAAC,MAAM;QACX,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;QACd,OAAO,IAAI;IACf;IAEA,QAAQ;QACJ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,QAAU,IAAI,CAAC,QAAQ,CAAC;QAC5C,OAAO,IAAI;IACf;IAEA,OAAO;QACH,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,KAAK;QACV,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG;QAC9B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;QACd,OAAO,IAAI;IACf;IAEA,OAAO;QACH,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,IAAI;QACT,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,OAAS,IAAI,CAAC,QAAQ,CAAC;QAC3C,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG;QAC9B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;QACd,OAAO,IAAI;IACf;IAEA,UAAU;QACN,IAAI,CAAC,IAAI;QACT,IAAI,CAAC,MAAM,CAAC,SAAS;QACrB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,cAAc,IAAI,CAAC,KAAK;QACrC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,iBAAiB,IAAI,CAAC,KAAK;QACxC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,eAAe,IAAI,CAAC,IAAI;QACrC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,iBAAiB,IAAI,CAAC,IAAI;QACvC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,IAAI,CAAC,KAAK;QACjC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,IAAI,CAAC,OAAO;QACpC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;IAClB;AACJ;kBAvlBqB;;;;;ACHrB,6CAAgB;AAehB,+DAAgB;AAiChB,+DAAsB;AAhDf,SAAS,QAAQ,GAAG;IACvB,OAAQ;QACJ,KAAK;QACL,KAAK;QACL,KAAK;YACD,OAAO,GAAG,KAAK;QACnB,KAAK;YACD,OAAO,GAAG,KAAK;QACnB,KAAK;YACD,OAAO,GAAG,KAAK;QACnB;YACI,OAAO;IACf;AACJ;AAEO,SAAS,0BAA0B,SAAS;IAC/C,IAAI,OAAO,cAAc,UAAU,OAAO,EAAE;IAC5C,MAAM,UAAU,UAAU,QAAQ,CAAC;IACnC,OAAO,MAAM,IAAI,CAAC,SACb,GAAG,CAAC,CAAC;QACF,MAAM,OAAO,MAAM,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;QAClC,IAAI,KAAK,MAAM,IAAI,GAAG;YAClB,MAAM,OAAO,MAAM,MAAM,CAAC,IAAI,CACzB,IAAI,GACJ,UAAU,CAAC,UAAU,KACrB,UAAU,CAAC,UAAU,KACrB,UAAU,CAAC,QAAQ,KACnB,UAAU,CAAC,QAAQ,KACnB,UAAU,CAAC,SAAS;YAEzB,OAAO;gBACH;gBACA,MAAM,OAAO,IAAI,CAAC,EAAE;gBACpB,MAAM,QAAQ,OAAO,IAAI,CAAC,EAAE;gBAC5B,UAAU,OAAO,IAAI,CAAC,EAAE;gBACxB,OAAO,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC;gBACzC,WAAW,OAAO,IAAI,CAAC,EAAE;gBACzB,MAAM,OAAO,IAAI,CAAC,EAAE;gBACpB,QAAQ,IAAI,CAAC,EAAE;gBACf,OAAO,OAAO,IAAI,CAAC,EAAE;YACzB;QACJ,OACI,OAAO;IAEf,GACC,MAAM,CAAC;AAChB;AAEO,eAAe,0BAA0B,GAAG;IAC/C,MAAM,MAAM,MAAM,MAAM;IACxB,MAAM,YAAY,MAAM,IAAI,IAAI;IAChC,OAAO,0BAA0B;AACrC;;;ACpDA,QAAQ,cAAc,GAAG,SAAU,CAAC;IAClC,OAAO,KAAK,EAAE,UAAU,GAAG,IAAI;QAAC,SAAS;IAAC;AAC5C;AAEA,QAAQ,iBAAiB,GAAG,SAAU,CAAC;IACrC,OAAO,cAAc,CAAC,GAAG,cAAc;QAAC,OAAO;IAAI;AACrD;AAEA,QAAQ,SAAS,GAAG,SAAU,MAAM,EAAE,IAAI;IACxC,OAAO,IAAI,CAAC,QAAQ,OAAO,CAAC,SAAU,GAAG;QACvC,IACE,QAAQ,aACR,QAAQ,gBACR,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,MAE3C;QAGF,OAAO,cAAc,CAAC,MAAM,KAAK;YAC/B,YAAY;YACZ,KAAK;gBACH,OAAO,MAAM,CAAC,IAAI;YACpB;QACF;IACF;IAEA,OAAO;AACT;AAEA,QAAQ,MAAM,GAAG,SAAU,IAAI,EAAE,QAAQ,EAAE,GAAG;IAC5C,OAAO,cAAc,CAAC,MAAM,UAAU;QACpC,YAAY;QACZ,KAAK;IACP;AACF;;;AClCA,OAAO,OAAO,GAAG;;;;;ACAjB;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEe,MAAM;IACjB,YAAY,GAAG,EAAE,OAAO,CAAE;QACtB,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,WAAW,CAAC,KAAK;QAElC,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK;QAC/B,MAAM,EAAE,eAAe,EAAE,GAAG,IAAI,QAAQ;QACxC,SAAS,iBAAiB,WAAW;QAErC,IAAI,CAAC,QAAQ,GAAG;YACZ;YACA,QAAQ;YACR,UAAU;YACV,SAAS;YACT,cAAc;YACd,aAAa;YACb,SAAS;YACT,gBAAgB;YAChB,eAAe;YACf,eAAe;YACf,cAAc;YACd,iBAAiB;YACjB,gBAAgB;YAChB,cAAc;YACd,aAAa;YACb,QAAQ;YACR,OAAO;QACX;QAEA,IAAI,CAAC,MAAM,GAAG;YACV,SAAS;YACT,QAAQ;YACR,UAAU;YACV,OAAO;QACX;QAEA,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,KAAK,GAAG;QAEb,IAAI,CAAC,cAAc;QACnB,IAAI,CAAC,aAAa;QAClB,IAAI,CAAC,YAAY;QAEjB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK;QAE5B,IAAI,EAAE,CAAC,cAAc,CAAC,QAAU,IAAI,CAAC,YAAY,CAAC;QAClD,IAAI,EAAE,CAAC,iBAAiB,CAAC,QAAU,IAAI,CAAC,YAAY,CAAC;IACzD;IAEA,OAAO,QAAQ;aACX,CAAA,GAAA,qBAAG,AAAD;cACF,CAAA,GAAA,sBAAI,AAAD;iBACH,CAAA,GAAA,yBAAO,AAAD;gBACN,CAAA,GAAA,wBAAM,AAAD;qBACL,CAAA,GAAA,2BAAW,AAAD;oBACV,CAAA,GAAA,0BAAU,AAAD;qBACT,CAAA,GAAA,2BAAW,AAAD;oBACV,CAAA,GAAA,0BAAU,AAAD;qBACT,CAAA,GAAA,2BAAW,AAAD;oBACV,CAAA,GAAA,0BAAU,AAAD;mBACT,CAAA,GAAA,0BAAS,AAAD;oBACR,CAAA,GAAA,2BAAU,AAAD;IACb,EAAE;IAEF,IAAI,SAAS;QACT,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM;IAC9B;IAEA,IAAI,UAAU;QACV,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,QAAQ,CAAC,eAAe;IACjE;IAEA,IAAI,WAAW;QACX,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI;QACvB,OAAO,CAAC;;gBAEA,EAAE,GAAA,qBAAG,CAAC,EAAE,GAAA,sBAAI,CAAC;;;gBAGb,EAAE,GAAA,yBAAO,CAAC;;;;;;;oCAOU,EAAE,GAAA,2BAAW,CAAC,EAAE,GAAA,0BAAU,CAAC;;;;oCAI3B,EAAE,GAAA,2BAAW,CAAC,EAAE,GAAA,0BAAU,CAAC;;;;oCAI3B,EAAE,GAAA,2BAAW,CAAC,EAAE,GAAA,0BAAU,CAAC;;;;;;;gCAO/B,EAAE,GAAA,0BAAS,CAAC,EAAE,GAAA,2BAAU,CAAC;;;;gCAIzB,EAAE,GAAA,0BAAS,CAAC,EAAE,GAAA,2BAAU,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBA6BrC,EAAE,GAAA,wBAAM,CAAC;;;;;;;wCAOW,EAAE,GAAA,0BAAU,CAAC;;;;wCAIb,EAAE,GAAA,0BAAU,CAAC;;;;wCAIb,EAAE,GAAA,0BAAU,CAAC;;;;;;;;oCAQjB,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,QAAU,CAAC,iBAAiB,EAAE,MAAM,6CAA6C,EAAE,MAAM,QAAQ,CAAC,EAAE,IAAI,CAAC,IAAI;;;;;;8KAMlE,EAAE,OAAO,SAAS,CAAC;;;QAG5G,CAAC;IACL;IAEA,IAAI,SAAS;QACT,OACI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI;YAClB;gBACI,MAAM;gBACN,OAAO;oBAAC;oBAAI;iBAAM;YACtB;YACA;gBACI,MAAM;gBACN,OAAO;oBAAC;oBAAI;iBAAM;YACtB;YACA;gBACI,MAAM;gBACN,OAAO;oBAAC;oBAAI;iBAAM;YACtB;YACA;gBACI,MAAM;gBACN,OAAO;oBAAC;oBAAI;iBAAG;YACnB;SACH;IAET;IAEA,IAAI,QAAQ;QACR,OACI,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI;YACjB;gBACI,MAAM;gBACN,OAAO;YACX;YACA;gBACI,MAAM;gBACN,OAAO;gBACP,MAAM;YACV;YACA;gBACI,MAAM;gBACN,OAAO;YACX;YACA;gBACI,MAAM;gBACN,OAAO;gBACP,MAAM;YACV;YACA;gBACI,MAAM;gBACN,OAAO;YACX;SACH;IAET;IAEA,IAAI,QAAQ;QACR,OACI,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI;YACjB;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACH;IAET;IAEA,MAAM,QAAQ,EAAE;QACZ,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK;QAC5B,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,QAAQ;QAClC,OAAO,MAAM,UAAU;IAC3B;IAEA,QAAQ,GAAG,EAAE,KAAK,EAAE;QAChB,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ;QACrC,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ;QAChC,QAAQ,OAAO,CAAC,IAAI,GAAG;QACvB,IAAI,IAAI,CAAC,OAAO,EACZ,OAAO,OAAO,CAAC,IAAI,GAAG;IAE9B;IAEA,iBAAiB;QACb,MAAM,EAAE,aAAa,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,KAAK;QAE7C,MAAM,WAAW,cAAc;QAC/B,SAAS,SAAS,GAAG;QACrB,SAAS,SAAS,GAAG,IAAI,CAAC,QAAQ;QAClC,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG;QAEzB,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;QACnC,QAAQ,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;QAE/B,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC;QACxC,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;QACvC,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC;QACxC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;QACtC,IAAI,CAAC,QAAQ,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;QACzC,IAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;QACzC,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC;QACxC,IAAI,CAAC,QAAQ,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3C,IAAI,CAAC,QAAQ,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC;QACxC,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;QACvC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;QAClC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACrC;IAEA,eAAe;QACX,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ;QAE9G,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,SAAS;YAC7B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;gBAChB,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO;YACjC;YACA,IAAI,CAAC,KAAK;QACd;QAEA,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,cAAc,SAAS,CAAC;YACnC,MAAM,QAAQ,MAAM,MAAM,CAAC,OAAO,CAAC;YACnC,IAAI,CAAC,OAAO;YACZ,MAAM,OAAO,OAAO,MAAM,OAAO,CAAC,IAAI;YACtC,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,OAC3B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;gBAChB,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAM,MAAM;YACjD;iBAEA,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;gBAChB,OAAO;uBAAI,IAAI,CAAC,MAAM,CAAC,KAAK;oBAAE;iBAAK;YACvC;YAEJ,IAAI,CAAC,KAAK;QACd;QAEA,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,cAAc,SAAS;YAClC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;gBAChB,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW;YACzC;YACA,IAAI,CAAC,KAAK;QACd;QAEA,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,SAAS;YAChC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;gBAChB,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB;YACzD;YACA,IAAI,CAAC,KAAK;QACd;QAEA,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,aAAa,SAAS,CAAC;YAClC,MAAM,QAAQ,MAAM,MAAM,CAAC,OAAO,CAAC;YACnC,IAAI,CAAC,OAAO;YACZ,MAAM,OAAO,OAAO,MAAM,OAAO,CAAC,IAAI;YACtC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;gBAChB,MAAM;YACV;YACA,IAAI,CAAC,KAAK;QACd;QAEA,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,SAAS,CAAC;YAC9B,MAAM,SAAS,MAAM,MAAM,CAAC,OAAO,CAAC;YACpC,IAAI,CAAC,QAAQ;YACb,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;gBAChB,OAAO,OAAO,OAAO,CAAC,KAAK;YAC/B;YACA,IAAI,CAAC,KAAK;QACd;QAEA,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,SAAS,IAAM,IAAI,CAAC,IAAI;QAE9C,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,YAAY,CAAC;YAChC,IAAI,MAAM,GAAG,KAAK,SAAS;gBACvB,MAAM,cAAc;gBACpB,IAAI,CAAC,IAAI;YACb;QACJ;IACJ;IAEA,gBAAgB;QACZ,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC;YACpC,KAAK;YACL,KAAK;YACL,OAAO,EAAE;YACT,WAAW,IAAI,CAAC,QAAQ,CAAC,cAAc;YACvC,WAAW;gBACP,OAAO,KAAK,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,QAAQ;YACpD;YACA,UAAU,CAAC;gBACP,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,QAAQ;gBACvC,cAAc,WAAW,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC;gBACvC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;oBAChB,SAAS,QAAQ;gBACrB;YACJ;QACJ;QAEA,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;YACnC,KAAK;YACL,KAAK;YACL,OAAO,IAAI,CAAC,MAAM;YAClB,WAAW,IAAI,CAAC,QAAQ,CAAC,aAAa;YACtC,WAAW;gBACP,OACI,IAAI,CAAC,MAAM,CAAC,SAAS,CACjB,CAAC,OAAS,KAAK,KAAK,CAAC,EAAE,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,KAAK,KAAK,CAAC,EAAE,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,KAC3F;YAEb;YACA,UAAU,CAAC;gBACP,MAAM,SAAS,IAAI,CAAC,MAAM,CAAC,MAAM;gBACjC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,QAAQ;gBACtC,aAAa,WAAW,GAAG,OAAO,IAAI;gBACtC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;oBAChB,QAAQ,OAAO,KAAK;gBACxB;YACJ;QACJ;QAEA,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;YACrC,KAAK;YACL,KAAK;YACL,OAAO,EAAE;YACT,WAAW,IAAI,CAAC,QAAQ,CAAC,eAAe;YACxC,WAAW;gBACP,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO;gBAClD,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,KAAK,UAChC,OAAO,KAAK,KAAK,CAAC,AAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,eAAgB,QAAQ;qBAElE,OAAO,KAAK,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,QAAQ;YAEpE;YACA,UAAU,CAAC;gBACP,MAAM,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,QAAQ;gBACxC,eAAe,WAAW,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC;gBACxC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;oBAChB,UAAU,CAAC,EAAE,MAAM,CAAC,CAAC;gBACzB;YACJ;QACJ;QAEA,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;YAClC,KAAK;YACL,KAAK;YACL,OAAO,IAAI,CAAC,KAAK;YACjB,WAAW,IAAI,CAAC,QAAQ,CAAC,YAAY;YACrC,WAAW;gBACP,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,OAAS,KAAK,KAAK,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK;YAC/E;YACA,UAAU,CAAC;gBACP,MAAM,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM;gBAC/B,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,QAAQ;gBACrC,YAAY,WAAW,GAAG,MAAM,IAAI;gBACpC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;oBAChB,OAAO,MAAM,KAAK;gBACtB;YACJ;QACJ;IACJ;IAEA,aAAa,EAAE,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE;QACnE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK;QAEnC,UAAU,SAAS,GAAG,CAAC;;;oBAGX,EAAE,MAAM,GAAG,CAAC,IAAM,CAAC,oCAAoC,CAAC,EAAE,IAAI,CAAC,IAAI;;;;;;gBAMvE,EAAE,MAAM,GAAG,CAAC,CAAC,OAAU,KAAK,IAAI,GAAG,KAAK,CAAC,6BAA6B,EAAE,KAAK,IAAI,CAAC,MAAM,CAAC,EAAG,IAAI,CAAC,IAAI;;QAE7G,CAAC;QAED,MAAM,OAAO,MAAM,mBAAmB;QACtC,MAAM,YAAY,MAAM,wBAAwB;QAEhD,IAAI,YAAY;QAEhB,SAAS,MAAM,QAAQ,WAAW;YAC9B,MAAM,QAAQ,MAAM,OAAO,KAAK;YAChC,MAAM,aAAa,AAAC,CAAA,QAAQ,GAAE,IAAM,CAAA,MAAM,GAAE;YAC5C,KAAK,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE,aAAa,IAAI,CAAC,CAAC;YACxC,IAAI,MAAM,MAAM,KAAK,GACjB,UAAU,KAAK,CAAC,KAAK,GAAG,KAAK,KAAK,CAAC,IAAI;YAE3C,SAAS;QACb;QAEA,SAAS,WAAW,KAAK;YACrB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,UAAU,qBAAqB;YACvD,MAAM,QAAQ,MAAM,MAAM,OAAO,GAAG,MAAM,GAAG;YAC7C,MAAM,QAAQ,KAAK,KAAK,CAAC,AAAC,QAAQ,QAAU,CAAA,MAAM,GAAE,IAAK;YACzD,MAAM;QACV;QAEA,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,SAAS,CAAC;YAChC,WAAW;QACf;QAEA,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,aAAa,CAAC;YACpC,YAAY,MAAM,MAAM,KAAK;QACjC;QAEA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,sBAAsB,CAAC;YAC/B,IAAI,WACA,WAAW;QAEnB;QAEA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,oBAAoB,CAAC;YAC7B,IAAI,WAAW;gBACX,YAAY;gBACZ,WAAW;YACf;QACJ;QAEA,OAAO;YAAE;QAAM;IACnB;IAEA,aAAa,KAAK,EAAE;QAChB,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,MAAM,EAAE,QAAQ,EAAE,eAAe,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ;YAC3D,IAAI,OACA,gBAAgB,WAAW,CAAC;iBAE5B,OAAO,WAAW,CAAC;QAE3B;IACJ;IAEA,MAAM,OAAO;QACT,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ;QAEhC,MAAM,OAAO,OAAO,KAAK,CAAC,IAAI;QAC9B,IAAI,CAAC,KAAK,MAAM,EAAE;QAClB,IAAI,IAAI,CAAC,MAAM,EAAE;QACjB,IAAI,IAAI,CAAC,QAAQ,EAAE;QAEnB,MAAM,QAAQ;YACV,MAAM;YACN,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI;YACtB,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK;YACxB,MAAM,IAAI,CAAC,GAAG,CAAC,WAAW;QAC9B;QAEA,IAAI;YACA,IAAI,CAAC,QAAQ,GAAG;YAChB,MAAM,QAAQ,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;YAC3C,IAAI,CAAC,QAAQ,GAAG;YAEhB,IAAI,UAAU,MAAM;YAEpB,MAAM,MAAM,GAAG;YACf,OAAO,MAAM,IAAI;YACjB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YAClB,OAAO,KAAK,GAAG;YAEf,IAAI,CAAC,IAAI;QACb,EAAE,OAAO,OAAO;YACZ,IAAI,CAAC,QAAQ,GAAG;QACpB;IACJ;IAEA,OAAO;QACH,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK;QAC/B,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,QAAQ;QAE/B,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ;QAC/B,MAAM,SAAS,GAAG;QAClB,SAAS,OAAO;QAEhB,MAAM,OAAO;YACT,IAAI,CAAC,KAAK,GAAG,WAAW;gBACpB,IAAI,SAAS,GACT,IAAI,CAAC,MAAM;qBACR;oBACH,QAAQ;oBACR,MAAM,SAAS,GAAG;oBAClB;gBACJ;YACJ,GAAG;QACP;QAEA;IACJ;IAEA,SAAS;QACL,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK;QAClC,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,QAAQ;QAC/B,aAAa,IAAI,CAAC,KAAK;QACvB,IAAI,CAAC,MAAM,GAAG;QACd,MAAM,SAAS,GAAG;QAClB,YAAY,OAAO;IACvB;IAEA,QAAQ;QACJ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK;QACzB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK;QACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK;QAC1B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK;QAEvB,IAAI,CAAC,OAAO,CAAC,kBAAkB,IAAI,CAAC,MAAM,CAAC,OAAO;QAClD,IAAI,CAAC,OAAO,CAAC,eAAe,IAAI,CAAC,MAAM,CAAC,IAAI;QAC5C,IAAI,CAAC,OAAO,CAAC,gBAAgB,IAAI,CAAC,MAAM,CAAC,KAAK;QAC9C,IAAI,CAAC,OAAO,CAAC,gBAAgB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,gBAAgB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,gBAAgB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,sBAAsB,IAAI,CAAC,MAAM,CAAC,WAAW;QAC1D,IAAI,CAAC,OAAO,CAAC,oBAAoB,IAAI,CAAC,MAAM,CAAC,mBAAmB;QAChE,IAAI,CAAC,OAAO,CAAC,gBAAgB,IAAI,CAAC,MAAM,CAAC,KAAK;QAE9C,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,KAAK;QACnC,MAAM,SAAS,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ;QAC7C,MAAM,SAAS,MAAM,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,OAAS,KAAK,OAAO,CAAC,KAAK,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW;QACrG,UAAU,aAAa,QAAQ;IACnC;IAEA,MAAM,SAAS,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE;QAC1C,OAAO,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ;QACzC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG;QACvB,IAAI,CAAC,KAAK;IACd;AACJ;kBA3lBqB;AA6lBrB,IAAI,OAAO,aAAa,aAAa;IACjC,MAAM,KAAK;IACX,MAAM,SAAS,SAAS,cAAc,CAAC;IACvC,IAAI,QACA,OAAO,WAAW,GAAG,CAAA,GAAA,yBAAK,AAAD;SACtB;QACH,MAAM,SAAS,SAAS,aAAa,CAAC;QACtC,OAAO,EAAE,GAAG;QACZ,OAAO,WAAW,GAAG,CAAA,GAAA,yBAAK,AAAD;QACzB,SAAS,IAAI,CAAC,WAAW,CAAC;IAC9B;AACJ;;;ACtnBA,OAAO,OAAO,GAAG;;;ACAjB,OAAO,OAAO,GAAG;;;ACAjB,OAAO,OAAO,GAAG;;;ACAjB,OAAO,OAAO,GAAG;;;ACAjB,OAAO,OAAO,GAAG;;;ACAjB,OAAO,OAAO,GAAG;;;ACAjB,OAAO,OAAO,GAAG;;;ACAjB,OAAO,OAAO,GAAG;;;ACAjB,OAAO,OAAO,GAAG;;;ACAjB,OAAO,OAAO,GAAG;;;ACAjB,OAAO,OAAO,GAAG;;;ACAjB,OAAO,OAAO,GAAG;;;ACAjB,OAAO,OAAO,GAAG;;;;;6CC0BO;AA1BxB,MAAM,MAAM;IACR,KAAI,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM;QACnC,OAAO,AAAE,CAAA,QAAQ,KAAI,IAAM,CAAA,SAAS,MAAK,IAAO,CAAA,QAAQ,KAAI,IAAK;IACrE;IACA,OAAM,KAAK,EAAE,GAAG,EAAE,IAAI;QAClB,MAAM,IAAI,KAAK,KAAK,CAAC,QAAQ,QAAQ;QACrC,OAAO,MAAM,IAAI,CACb;YACI,QAAQ,KAAK,KAAK,CAAC,AAAC,CAAA,MAAM,KAAI,IAAK;QACvC,GACA,CAAC,GAAG;YACA,OAAO,IAAI,OAAO;QACtB;IAER;AACJ;AAEA,MAAM,OAAO,CAAC,QAAQ;IAClB,MAAM,UAAU,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE;IACrC,MAAM,UAAU,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE;IACrC,OAAO;QACH,QAAQ,KAAK,IAAI,CAAC,KAAK,GAAG,CAAC,SAAS,KAAK,KAAK,GAAG,CAAC,SAAS;QAC3D,OAAO,KAAK,KAAK,CAAC,SAAS;IAC/B;AACJ;AAEe,SAAS,QAAQ,GAAG,EAAE,OAAO,EAAE,MAAM;IAChD,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,WAAW,CAAC,KAAK;IAEvC,IAAI,QAAQ,CAAC,GAAG,CAAC;QACb,MAAM;QACN,UAAU;QACV,MAAM;QACN,OAAO;YACH,UAAU;YACV,KAAK;YACL,MAAM;YACN,OAAO;YACP,QAAQ;YACR,OAAO;YACP,eAAe;QACnB;QACA,SAAQ,QAAQ;YACZ,IAAI,SAAS;YACb,IAAI,QAAQ;YAEZ,SAAS,OAAO,MAAM,EAAE;gBACpB,SAAS;gBACT,QAAQ;gBACR,SAAS,SAAS,GAAG;gBAErB,IAAI,CAAC,IAAI,QAAQ,IAAI,IAAI,MAAM,CAAC,MAAM,EAAE;gBAExC,MAAM,MAAM;oBACR,GAAG,SAAS,WAAW;oBACvB,GAAG,SAAS,YAAY;gBAC5B;gBAEA,MAAM,UAAU;oBACZ,MAAM;oBACN,MAAM,IAAI,CAAC;oBACX,MAAM;oBACN,MAAM;oBACN,OAAO;oBACP,SAAS;oBACT,WAAW,KAAK,KAAK,CAAC,IAAI,CAAC,GAAG;oBAC9B,UAAU,KAAK,KAAK,CAAC,IAAI,CAAC,GAAG;oBAC7B,WAAW;oBACX,YAAY;gBAChB;gBAEA,IAAI,OAAO,WAAW,UAClB,OAAO,MAAM,CAAC,SAAS;gBAG3B,IAAI,SAAS,EAAE;gBAEf,IAAI,MAAM,OAAO,CAAC,QAAQ,IAAI,MAAM,EAChC,SAAS;uBAAI;iBAAI;qBACd;oBACH,MAAM,MAAM,IAAI,QAAQ,GAAG,IAAI,CAAC;oBAChC,IAAK,IAAI,IAAI,GAAG,KAAK,IAAI,CAAC,EAAE,KAAK,QAAQ,QAAQ,CAAE;wBAC/C,MAAM,IAAI,QAAQ,MAAM,CAAC,MAAM,CAC3B,CAAC,EAAE,IAAI,EAAE,GAAK,OAAO,IAAI,OAAO,QAAQ,AAAC,CAAA,IAAI,QAAQ,QAAQ,AAAD,IAAK,KACnE,MAAM;wBACR,OAAO,IAAI,CAAC;4BAAC;4BAAG;yBAAE;oBACtB;gBACJ;gBAEA,IAAI,OAAO,MAAM,KAAK,GAAG;gBAEzB,MAAM,YAAY,MAAM,CAAC,OAAO,MAAM,GAAG,EAAE;gBAC3C,MAAM,QAAQ,SAAS,CAAC,EAAE;gBAC1B,MAAM,QAAQ,SAAS,CAAC,EAAE;gBAC1B,IAAI,UAAU,IAAI,CAAC,EACf,OAAO,IAAI,CAAC;oBAAC,IAAI,CAAC;oBAAE;iBAAM;gBAG9B,MAAM,UAAU,OAAO,GAAG,CAAC,CAAC,QAAU,KAAK,CAAC,EAAE;gBAC9C,MAAM,OAAO,KAAK,GAAG,IAAI;gBACzB,MAAM,OAAO,KAAK,GAAG,IAAI;gBACzB,MAAM,OAAO,AAAC,CAAA,OAAO,IAAG,IAAK;gBAE7B,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,IAAK;oBACpC,MAAM,QAAQ,MAAM,CAAC,EAAE;oBACvB,MAAM,IAAI,KAAK,CAAC,EAAE;oBAClB,KAAK,CAAC,EAAE,GAAG,IAAK,CAAA,IAAI,OAAO,IAAI,QAAQ,KAAK,GAAG,IAAI,QAAQ,KAAK,AAAD,IAAK,QAAQ,SAAS;gBACzF;gBAEA,MAAM,eAAe,CAAC,SAAS,UAAU,MAAM;oBAC3C,MAAM,IAAI,YAAY;oBACtB,MAAM,IAAI,QAAQ;oBAClB,MAAM,IAAI,KAAK,GAAG;oBAClB,MAAM,OAAO,IAAI,GAAG,CAAC,KAAK,GAAG,CAAC,EAAE,KAAK,IAAI,QAAQ,UAAU,EAAE,GAAG,GAAG,GAAG;oBACtE,MAAM,QAAQ,EAAE,KAAK,GAAG,OAAQ,CAAA,UAAU,KAAK,EAAE,GAAG,CAAA;oBACpD,MAAM,SAAS,EAAE,MAAM,GAAG,QAAQ,SAAS;oBAC3C,MAAM,IAAI,OAAO,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,SAAS;oBACzC,MAAM,IAAI,OAAO,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,SAAS;oBACzC,OAAO;wBAAC;wBAAG;qBAAE;gBACjB;gBAEA,MAAM,gBAAgB,CAAC,OAAO,GAAG;oBAC7B,MAAM,MAAM,aAAa,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE;oBAC7C,MAAM,MAAM,aAAa,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE;oBACpD,MAAM,QAAQ,MAAM,EAAE,MAAM,GAAG,IAAI,OAAO;oBAC1C,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC;gBACtF;gBAEA,MAAM,kBAAkB,OAAO,GAAG,CAAC,CAAC;oBAChC,MAAM,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,IAAI,EAAE,QAAQ,IAAI,EAAE,GAAG,IAAI,CAAC;oBAC5D,MAAM,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,IAAI,EAAE,QAAQ,IAAI,EAAE,IAAI,CAAC,EAAE;oBAC3D,OAAO;wBAAC;wBAAG;qBAAE;gBACjB;gBAEA,MAAM,QAAQ,gBAAgB,MAAM,CAChC,CAAC,KAAK,GAAG,GAAG,IACR,MAAM,IACA,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GACvE,CAAC,EAAE,IAAI,CAAC,EAAE,cAAc,GAAG,GAAG,GAAG,CAAC,EAC5C;gBAGJ,SAAS,SAAS,GAAG,CAAC;sCACA,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;;;kGAG2C,EAAE,QAAQ,OAAO,CAAC;kGAClB,EAAE,QAAQ,OAAO,CAAC;;;;;6DAKvD,EAAE,MAAM;;gBAErD,CAAC;gBAED,SAAS,MAAM,kBAAkB;gBACjC,QAAQ,MAAM,iBAAiB;gBAC/B,OAAO,YAAY,CAAC,UAAU,CAAC,EAAE,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC;gBACpD,MAAM,YAAY,CAAC,UAAU,CAAC,EAAE,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC;YACvD;YAEA,IAAI,EAAE,CAAC,oBAAoB;gBACvB,IAAI,UAAU,OAAO;oBACjB,OAAO,YAAY,CAAC,UAAU,CAAC,EAAE,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC;oBACpD,MAAM,YAAY,CAAC,UAAU,CAAC,EAAE,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC;gBACvD;YACJ;YAEA,IAAI,EAAE,CAAC,UAAU,CAAC,MAAM;gBACpB,IAAI,UAAU,SAAS,SAAS,UAAU;oBACtC,OAAO,YAAY,CAAC,UAAU,CAAC,EAAE,aAAa,IAAI,CAAC,CAAC;oBACpD,MAAM,YAAY,CAAC,UAAU,CAAC,EAAE,aAAa,IAAI,CAAC,CAAC;gBACvD;YACJ;YAEA,IAAI,EAAE,CAAC,SAAS,IAAM;YACtB,IAAI,EAAE,CAAC,UAAU,IAAM;YACvB,IAAI,EAAE,CAAC,iCAAiC,IAAM;YAC9C,IAAI,EAAE,CAAC,iCAAiC,CAAC,SAAW,OAAO;QAC/D;IACJ;AACJ","sources":["packages/artplayer-plugin-danmuku/src/index.js","packages/artplayer-plugin-danmuku/src/danmuku.js","packages/artplayer-plugin-danmuku/src/bilibili.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-54089e51cb2f5cb0.js","packages/artplayer-plugin-danmuku/src/setting.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-e633bd0642c0f6d8.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-04a4ccdcbe82b9fc.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-6d3492096472ebee.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-4366f15bf5589225.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-3a33dc2ac5713237.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-7405474972f49ad1.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-0c32b0aed97d3724.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-bfb87ad7bdac92c0.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-90cca85b3e6e9028.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-44a2c233ef45411a.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-7d429a40e7f4f4ac.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-081fb7f7de945ff8.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-61cba682068f8950.js","packages/artplayer-plugin-danmuku/src/heatmap.js"],"sourcesContent":["import Danmuku from './danmuku';\nimport Setting from './setting';\nimport heatmap from './heatmap';\n\nexport default function artplayerPluginDanmuku(option) {\n    return (art) => {\n        const danmuku = new Danmuku(art, option);\n        const setting = new Setting(art, danmuku);\n\n        if (danmuku.option.heatmap) {\n            heatmap(art, danmuku, danmuku.option.heatmap);\n        }\n\n        return {\n            name: 'artplayerPluginDanmuku',\n            emit: danmuku.emit.bind(danmuku),\n            load: danmuku.load.bind(danmuku),\n            config: danmuku.config.bind(danmuku),\n            hide: danmuku.hide.bind(danmuku),\n            show: danmuku.show.bind(danmuku),\n            reset: danmuku.reset.bind(danmuku),\n            mount: setting.mount.bind(setting),\n            get option() {\n                return danmuku.option;\n            },\n            get isHide() {\n                return danmuku.isHide;\n            },\n            get isStop() {\n                return danmuku.isStop;\n            },\n        };\n    };\n}\n\nartplayerPluginDanmuku.icons = Setting.icons;\n\nif (typeof window !== 'undefined') {\n    window['artplayerPluginDanmuku'] = artplayerPluginDanmuku;\n}\n","import { bilibiliDanmuParseFromUrl } from './bilibili';\nimport workerText from 'bundle-text:./worker';\n\nexport default class Danmuku {\n    constructor(art, option) {\n        const { constructor, template } = art;\n\n        this.utils = constructor.utils; // 工具库\n        this.validator = constructor.validator; // 配置校验器\n        this.$danmuku = template.$danmuku; // 弹幕层容器\n        this.$player = template.$player; // 播放器容器\n\n        this.art = art;\n        this.danmus = []; // 原始弹幕数据\n        this.queue = []; // 实际弹幕队列\n        this.option = {}; // 格式化后的配置项\n        this.$refs = []; // 弹幕DOM节点池\n        this.isStop = false; // 是否停止\n        this.isHide = false; // 是否隐藏\n        this.timer = null; // 定时器\n        this.config(option); // 动态配置\n\n        // 创建 Web Worker, 用于计算弹幕的 top 值\n        this.worker = new Worker(URL.createObjectURL(new Blob([workerText])));\n\n        // 绑定公用事件\n        this.start = this.start.bind(this);\n        this.stop = this.stop.bind(this);\n        this.reset = this.reset.bind(this);\n        this.destroy = this.destroy.bind(this);\n\n        // 监听事件\n        art.on('video:play', this.start);\n        art.on('video:playing', this.start);\n        art.on('video:pause', this.stop);\n        art.on('video:waiting', this.stop);\n        art.on('destroy', this.destroy);\n        art.on('resize', this.reset);\n\n        // 开始加载弹幕\n        this.load();\n    }\n\n    // 默认配置\n    static get option() {\n        return {\n            danmuku: [], // 弹幕数据\n            speed: 5, // 弹幕持续时间，范围在[1 ~ 10]\n            margin: [10, '25%'], // 弹幕上下边距，支持像素数字和百分比\n            opacity: 1, // 弹幕透明度，范围在[0 ~ 1]\n            color: '#FFFFFF', // 默认弹幕颜色，可以被单独弹幕项覆盖\n            mode: 0, // 默认弹幕模式: 0: 滚动，1: 顶部，2: 底部\n            modes: [0, 1, 2], // 弹幕可见的模式\n            fontSize: 25, // 弹幕字体大小，支持像素数字和百分比\n            antiOverlap: true, // 弹幕是否防重叠\n            synchronousPlayback: false, // 是否同步播放速度\n            mount: undefined, // 弹幕发射器挂载点, 默认为播放器控制栏中部\n            heatmap: false, // 是否开启热力图\n            points: [], // 热力图数据\n            filter: () => true, // 弹幕载入前的过滤器，只支持返回布尔值\n            beforeEmit: () => true, // 弹幕发送前的过滤器，支持返回 Promise\n            beforeVisible: () => true, // 弹幕显示前的过滤器，支持返回 Promise\n            visible: true, // 弹幕层是否可见\n            maxLength: 200, // 弹幕输入框最大长度, 范围在[1 ~ 1000]\n            lockTime: 5, // 输入框锁定时间，范围在[1 ~ 60]\n            theme: 'dark', // 弹幕主题，支持 dark 和 light，只在自定义挂载时生效\n        };\n    }\n\n    // 配置校验\n    static get scheme() {\n        return {\n            danmuku: 'array|function|string',\n            speed: 'number',\n            margin: 'array',\n            opacity: 'number',\n            color: 'string',\n            mode: 'number',\n            modes: 'array',\n            fontSize: 'number|string',\n            antiOverlap: 'boolean',\n            synchronousPlayback: 'boolean',\n            mount: '?htmldivelement',\n            heatmap: 'object|boolean',\n            points: 'array',\n            filter: 'function',\n            beforeEmit: 'function',\n            beforeVisible: 'function',\n            visible: 'boolean',\n            maxLength: 'number',\n            lockTime: 'number',\n            theme: 'string',\n        };\n    }\n\n    // 初始弹幕样式\n    static get cssText() {\n        return `\n            user-select: none;\n            position: absolute;\n            white-space: pre;\n            pointer-events: none;\n            perspective: 500px;\n            display: inline-block;\n            will-change: transform;\n            font-weight: normal;\n            line-height: 1.125;\n            visibility: hidden;\n            font-family: SimHei, \"Microsoft JhengHei\", Arial, Helvetica, sans-serif;\n            text-shadow: rgb(0, 0, 0) 1px 0px 1px, rgb(0, 0, 0) 0px 1px 1px, rgb(0, 0, 0) 0px -1px 1px, rgb(0, 0, 0) -1px 0px 1px;\n        `;\n    }\n\n    // 是否在移动端使用了自动旋屏，会影响弹幕的left和top值\n    get isRotate() {\n        return this.art.plugins?.autoOrientation?.state;\n    }\n\n    // 计算上空白边距\n    get marginTop() {\n        const { clamp } = this.utils;\n        const value = this.option.margin[0];\n        const { clientHeight } = this.$player;\n\n        if (typeof value === 'number') {\n            return clamp(value, 0, clientHeight);\n        }\n\n        if (typeof value === 'string' && value.endsWith('%')) {\n            const ratio = parseFloat(value) / 100;\n            return clamp(clientHeight * ratio, 0, clientHeight);\n        }\n\n        return Danmuku.option.margin[0];\n    }\n\n    // 计算下空白边距\n    get marginBottom() {\n        const { clamp } = this.utils;\n        const value = this.option.margin[1];\n        const { clientHeight } = this.$player;\n\n        if (typeof value === 'number') {\n            return clamp(value, 0, clientHeight);\n        }\n\n        if (typeof value === 'string' && value.endsWith('%')) {\n            const ratio = parseFloat(value) / 100;\n            return clamp(clientHeight * ratio, 0, clientHeight);\n        }\n\n        return Danmuku.option.margin[1];\n    }\n\n    // 加载弹幕\n    async load() {\n        const { errorHandle } = this.utils;\n\n        try {\n            if (typeof this.option.danmuku === 'function') {\n                this.danmus = await this.option.danmuku();\n            } else if (typeof this.option.danmuku.then === 'function') {\n                this.danmus = await this.option.danmuku;\n            } else if (typeof this.option.danmuku === 'string') {\n                this.danmus = await bilibiliDanmuParseFromUrl(this.option.danmuku);\n            } else {\n                this.danmus = this.option.danmuku;\n            }\n\n            errorHandle(Array.isArray(this.danmus), 'Danmuku need return an array as result');\n\n            this.queue = []; // 清空实际弹幕队列\n            this.$danmuku.innerText = ''; // 清空弹幕层\n            this.danmus.forEach((danmu) => this.emit(danmu)); // 逐个验证原始弹幕并转换为实际弹幕\n            this.art.emit('artplayerPluginDanmuku:loaded', this.queue);\n\n            // TODO: 按时间从小到大排序，用于减少弹幕的遍历次数，待优化...\n            // this.queue = this.queue.sort((a, b) => a.time - b.time);\n        } catch (error) {\n            this.art.emit('artplayerPluginDanmuku:error', error);\n            throw error;\n        }\n\n        return this;\n    }\n\n    // 把原始弹幕转换为实际弹幕\n    emit(danmu) {\n        const { clamp } = this.utils;\n\n        this.validator(danmu, {\n            text: 'string', // 弹幕文本\n            mode: '?number', // 弹幕模式: 0: 滚动，1: 顶部，2: 底部\n            color: '?string', // 弹幕颜色\n            time: '?number', // 弹幕时间\n            border: '?boolean', // 弹幕是否有边框\n            style: '?object', // 弹幕额外样式\n            escape: '?boolean', // 弹幕文本是否转义\n        });\n\n        // 弹幕文本为空则直接忽略\n        if (!danmu.text.trim()) return this;\n\n        // 弹幕模式只能是 0, 1, 2\n        if (![0, 1, 2].includes(danmu.mode)) return this;\n\n        // 自定义弹幕过滤函数\n        if (!this.option.filter(danmu)) return this;\n\n        // 设置弹幕时间，如果没有则默认为当前时间加 0.5 秒\n        if (danmu.time) {\n            danmu.time = clamp(danmu.time, 0, Infinity);\n        } else {\n            danmu.time = this.art.currentTime + 0.5;\n        }\n\n        // 设置弹幕模式，如果没有则默认为全局配置\n        if (danmu.mode === undefined) {\n            danmu.mode = this.option.mode;\n        }\n\n        // 设置弹幕单独样式，如果没有则默认为空对象\n        if (danmu.style === undefined) {\n            danmu.style = {};\n        }\n\n        // 设置弹幕弹幕是否转义，如果没有则默认为 true，即不会显示 HTML 标签\n        if (danmu.escape === undefined) {\n            danmu.escape = true;\n        }\n\n        // 设置弹幕颜色，如果没有则默认为全局配置\n        if (danmu.color === undefined) {\n            danmu.color = this.option.color;\n        }\n\n        // 添加到实际弹幕队列\n        this.queue.push({\n            ...danmu,\n            $state: 'wait', // 弹幕状态\n            $ref: null, // 弹幕 DOM 节点\n            $restTime: 0, // 弹幕剩余时间\n            $lastStartTime: 0, // 弹幕上次开始时间\n        });\n\n        // 弹幕有四个状态：\n        // - wait: 弹幕还未开始显示，没有被添加到 DOM 中\n        // - ready: 弹幕准备好显示，没有被添加到 DOM 中\n        // - emit: 弹幕正在显示，已经被添加到 DOM 中\n        // - stop: 弹幕正在停止显示，已经被添加到 DOM 中\n\n        return this;\n    }\n\n    // 动态配置\n    config(option) {\n        const { clamp } = this.utils;\n        const { $controlsCenter } = this.art.template;\n\n        this.option = Object.assign({}, Danmuku.option, this.option, option);\n        this.validator(this.option, Danmuku.scheme);\n\n        this.option.mode = clamp(this.option.mode, 0, 2);\n        this.option.speed = clamp(this.option.speed, 1, 10);\n        this.option.opacity = clamp(this.option.opacity, 0, 1);\n        this.option.lockTime = clamp(this.option.lockTime, 1, 60);\n        this.option.maxLength = clamp(this.option.maxLength, 1, 1000);\n        this.option.mount = this.option.mount || $controlsCenter;\n\n        // 重新计算弹幕字体大小，需要重新渲染\n        if (option.fontSize) {\n            this.option.fontSize = this.getFontSize(this.option.fontSize);\n            this.reset();\n        }\n\n        // 通过配置项控制弹幕的显示和隐藏\n        if (this.option.visible) {\n            this.show();\n        } else {\n            this.hide();\n        }\n\n        this.art.emit('artplayerPluginDanmuku:config', this.option);\n\n        return this;\n    }\n\n    // 计算DOM的left值，受到旋屏影响\n    getLeft($ref) {\n        const rect = $ref.getBoundingClientRect();\n        return this.isRotate ? rect.top : rect.left;\n    }\n\n    // 获取弹幕DOM节点\n    getRef() {\n        const $ref = this.$refs.pop() || document.createElement('div');\n        $ref.style.cssText = Danmuku.cssText;\n        $ref.dataset.mode = '';\n        return $ref;\n    }\n\n    // 计算弹幕字体大小\n    getFontSize(fontSize) {\n        const { clamp } = this.utils;\n        const { clientHeight } = this.$player;\n\n        if (typeof fontSize === 'number') {\n            return clamp(fontSize, 12, clientHeight);\n        }\n\n        if (typeof fontSize === 'string' && fontSize.endsWith('%')) {\n            const ratio = parseFloat(fontSize) / 100;\n            return clamp(clientHeight * ratio, 12, clientHeight);\n        }\n\n        return Danmuku.option.fontSize;\n    }\n\n    // 计算弹幕的top值\n    postMessage(message = {}) {\n        return new Promise((resolve) => {\n            message.id = Date.now();\n            this.worker.postMessage(message);\n            this.worker.onmessage = (event) => {\n                const { data } = event;\n                if (data.id === message.id) {\n                    resolve(data);\n                }\n            };\n        });\n    }\n\n    // 根据状态，获取弹幕队列中的弹幕\n    filter(state, callback) {\n        return this.queue.filter((danmu) => danmu.$state === state).map(callback);\n    }\n\n    // 获取准备好发送的弹幕：有的是ready状态（如之前因为弹幕太多而暂停发送的弹幕），有的是wait状态\n    getReady() {\n        const { currentTime } = this.art;\n        return this.queue.filter((danmu) => {\n            return (\n                danmu.$state === 'ready' ||\n                (danmu.$state === 'wait' && currentTime + 0.1 >= danmu.time && danmu.time >= currentTime - 0.1)\n            );\n        });\n    }\n\n    // 获取正在发送的弹幕，用于计算下一个弹幕的top值\n    getEmits() {\n        const result = [];\n        const { clientWidth } = this.$player;\n        const clientLeft = this.getLeft(this.$player);\n\n        this.filter('emit', (danmu) => {\n            const top = danmu.$ref.offsetTop;\n            const left = this.getLeft(danmu.$ref) - clientLeft;\n            const height = danmu.$ref.clientHeight;\n            const width = danmu.$ref.clientWidth;\n            const distance = left + width;\n            const right = clientWidth - distance;\n            const speed = distance / danmu.$restTime;\n\n            const emit = {};\n            emit.top = top;\n            emit.left = left;\n            emit.height = height;\n            emit.width = width;\n            emit.right = right;\n            emit.speed = speed;\n            emit.distance = distance;\n            emit.time = danmu.$restTime;\n            emit.mode = danmu.mode;\n\n            result.push(emit);\n        });\n\n        return result;\n    }\n\n    // 重置弹幕到wait状态，回收弹幕DOM节点\n    makeWait(danmu) {\n        danmu.$state = 'wait';\n        if (danmu.$ref) {\n            danmu.$ref.style.cssText = Danmuku.cssText;\n            this.$refs.push(danmu.$ref);\n            danmu.$ref = null;\n        }\n    }\n\n    // 实时更新弹幕\n    update() {\n        const { setStyles } = this.utils;\n\n        this.timer = window.requestAnimationFrame(async () => {\n            if (this.art.playing && !this.isHide) {\n                // 实时计算弹幕的剩余显示时间\n                this.filter('emit', (danmu) => {\n                    const emitTime = (Date.now() - danmu.$lastStartTime) / 1000;\n                    danmu.$restTime -= emitTime;\n                    danmu.$lastStartTime = Date.now();\n                    // 超过时间即重置弹幕\n                    if (danmu.$restTime <= 0) {\n                        this.makeWait(danmu);\n                    }\n                });\n\n                // 获取准备好发送的弹幕，可能包含ready和wait状态的弹幕\n                const readys = this.getReady();\n                for (let index = 0; index < readys.length; index++) {\n                    const danmu = readys[index];\n\n                    // 弹幕发送前的过滤器\n                    const state = await this.option.beforeVisible(danmu);\n\n                    if (state) {\n                        const { clientWidth, clientHeight } = this.$player;\n                        danmu.$ref = this.getRef(); // 获取弹幕DOM节点\n\n                        // 设置弹幕文本\n                        if (danmu.escape) {\n                            danmu.$ref.innerText = danmu.text;\n                        } else {\n                            danmu.$ref.innerHTML = danmu.text;\n                        }\n\n                        // 提前添加到弹幕层中，用于计算top值\n                        this.$danmuku.appendChild(danmu.$ref);\n\n                        // 设置初始弹幕样式\n                        danmu.$ref.style.left = `${clientWidth}px`;\n                        danmu.$ref.style.opacity = this.option.opacity;\n                        danmu.$ref.style.fontSize = `${this.option.fontSize}px`;\n                        danmu.$ref.style.color = danmu.color;\n                        danmu.$ref.style.border = danmu.border ? `1px solid ${danmu.color}` : null;\n                        danmu.$ref.style.backgroundColor = danmu.border ? 'rgb(0 0 0 / 50%)' : null;\n                        danmu.$ref.style.marginLeft = '0px';\n\n                        // 设置单独弹幕样式\n                        setStyles(danmu.$ref, danmu.style);\n\n                        // 记录弹幕时间戳\n                        danmu.$lastStartTime = Date.now();\n\n                        // 计算弹幕剩余时间\n                        danmu.$restTime =\n                            this.option.synchronousPlayback && this.art.playbackRate\n                                ? this.option.speed / Number(this.art.playbackRate)\n                                : this.option.speed;\n\n                        // 计算弹幕的top值\n                        const { top } = await this.postMessage({\n                            target: {\n                                mode: danmu.mode,\n                                height: danmu.$ref.clientHeight,\n                                speed: (clientWidth + danmu.$ref.clientWidth) / danmu.$restTime,\n                            }, // 当前弹幕信息\n                            emits: this.getEmits(), // 正在发送的其它弹幕\n                            antiOverlap: this.option.antiOverlap,\n                            clientWidth: clientWidth,\n                            clientHeight: clientHeight,\n                            marginBottom: this.marginBottom,\n                            marginTop: this.marginTop,\n                        });\n\n                        if (danmu.$ref) {\n                            if (!this.isStop && top !== undefined) {\n                                danmu.$state = 'emit'; // 转换为emit状态\n                                danmu.$ref.style.visibility = 'visible';\n                                danmu.$ref.dataset.mode = danmu.mode; // CSS控制模式的显示和隐藏\n                                this.art.emit('artplayerPluginDanmuku:visible', danmu);\n\n                                switch (danmu.mode) {\n                                    // 滚动的弹幕\n                                    case 0: {\n                                        danmu.$ref.style.top = `${top}px`;\n                                        const translateX = clientWidth + danmu.$ref.clientWidth;\n                                        danmu.$ref.style.transform = `translateX(${-translateX}px)`;\n                                        danmu.$ref.style.transition = `transform ${danmu.$restTime}s linear 0s`;\n                                        break;\n                                    }\n                                    case 1:\n                                    // falls through\n                                    case 2:\n                                        danmu.$ref.style.left = '50%';\n                                        danmu.$ref.style.top = `${top}px`;\n                                        danmu.$ref.style.marginLeft = `-${danmu.$ref.clientWidth / 2}px`;\n                                        break;\n                                    default:\n                                        break;\n                                }\n                            } else {\n                                // 假如弹幕已经停止或者没有 top 值，则重置弹幕为ready状态，回收弹幕DOM节点，等待下次发送\n                                danmu.$state = 'ready';\n                                this.$refs.push(danmu.$ref);\n                                danmu.$ref = null;\n                            }\n                        }\n                    }\n                }\n            }\n\n            // 递归调用\n            if (!this.isStop) {\n                this.update();\n            }\n        });\n        return this;\n    }\n\n    // 继续弹幕\n    continue() {\n        const { clientWidth } = this.$player;\n        this.filter('stop', (danmu) => {\n            danmu.$state = 'emit'; // 转换为emit状态\n            danmu.$lastStartTime = Date.now();\n            switch (danmu.mode) {\n                // 继续滚动的弹幕\n                case 0: {\n                    const translateX = clientWidth + danmu.$ref.clientWidth;\n                    danmu.$ref.style.transform = `translateX(${-translateX}px)`;\n                    danmu.$ref.style.transition = `transform ${danmu.$restTime}s linear 0s`;\n                    break;\n                }\n                default:\n                    break;\n            }\n        });\n\n        return this;\n    }\n\n    // 暂停弹幕\n    suspend() {\n        const { clientWidth } = this.$player;\n        this.filter('emit', (danmu) => {\n            danmu.$state = 'stop'; // 转换为stop状态\n            switch (danmu.mode) {\n                // 停止滚动的弹幕\n                case 0: {\n                    const translateX = clientWidth - (this.getLeft(danmu.$ref) - this.getLeft(this.$player));\n                    danmu.$ref.style.transform = `translateX(${-translateX}px)`;\n                    danmu.$ref.style.transition = 'transform 0s linear 0s';\n                    break;\n                }\n                default:\n                    break;\n            }\n        });\n\n        return this;\n    }\n\n    stop() {\n        this.isStop = true;\n        this.suspend();\n        window.cancelAnimationFrame(this.timer);\n        this.art.emit('artplayerPluginDanmuku:stop');\n        return this;\n    }\n\n    start() {\n        this.isStop = false;\n        this.continue();\n        this.update();\n        this.art.emit('artplayerPluginDanmuku:start');\n        return this;\n    }\n\n    reset() {\n        this.queue.forEach((danmu) => this.makeWait(danmu));\n        return this;\n    }\n\n    show() {\n        this.isHide = false;\n        this.start();\n        this.$danmuku.style.display = '';\n        this.art.emit('artplayerPluginDanmuku:show');\n        return this;\n    }\n\n    hide() {\n        this.isHide = true;\n        this.stop();\n        this.queue.forEach((item) => this.makeWait(item));\n        this.$danmuku.style.display = 'none';\n        this.art.emit('artplayerPluginDanmuku:hide');\n        return this;\n    }\n\n    destroy() {\n        this.stop();\n        this.worker.terminate();\n        this.art.off('video:play', this.start);\n        this.art.off('video:playing', this.start);\n        this.art.off('video:pause', this.stop);\n        this.art.off('video:waiting', this.stop);\n        this.art.off('resize', this.reset);\n        this.art.off('destroy', this.destroy);\n        this.art.emit('artplayerPluginDanmuku:destroy');\n    }\n}\n","export function getMode(key) {\n    switch (key) {\n        case 1:\n        case 2:\n        case 3:\n            return 0; // 滚动\n        case 4:\n            return 2; // 底部\n        case 5:\n            return 1; // 顶部\n        default:\n            return 0;\n    }\n}\n\nexport function bilibiliDanmuParseFromXml(xmlString) {\n    if (typeof xmlString !== 'string') return [];\n    const matches = xmlString.matchAll(/<d (?:.*? )??p=\"(?<p>.+?)\"(?: .*?)?>(?<text>.+?)<\\/d>/gs);\n    return Array.from(matches)\n        .map((match) => {\n            const attr = match.groups.p.split(',');\n            if (attr.length >= 8) {\n                const text = match.groups.text\n                    .trim()\n                    .replaceAll('&quot;', '\"')\n                    .replaceAll('&apos;', \"'\")\n                    .replaceAll('&lt;', '<')\n                    .replaceAll('&gt;', '>')\n                    .replaceAll('&amp;', '&');\n\n                return {\n                    text,\n                    time: Number(attr[0]),\n                    mode: getMode(Number(attr[1])),\n                    fontSize: Number(attr[2]),\n                    color: `#${Number(attr[3]).toString(16)}`,\n                    timestamp: Number(attr[4]),\n                    pool: Number(attr[5]),\n                    userID: attr[6],\n                    rowID: Number(attr[7]),\n                };\n            } else {\n                return null;\n            }\n        })\n        .filter(Boolean);\n}\n\nexport async function bilibiliDanmuParseFromUrl(url) {\n    const res = await fetch(url);\n    const xmlString = await res.text();\n    return bilibiliDanmuParseFromXml(xmlString);\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","module.exports = \"7a58a7689dcfe725\";","import style from 'bundle-text:./style.less';\nimport $on from 'bundle-text:./img/on.svg';\nimport $off from 'bundle-text:./img/off.svg';\nimport $config from 'bundle-text:./img/config.svg';\nimport $style from 'bundle-text:./img/style.svg';\nimport $mode_0_off from 'bundle-text:./img/mode_0_off.svg';\nimport $mode_0_on from 'bundle-text:./img/mode_0_on.svg';\nimport $mode_1_off from 'bundle-text:./img/mode_1_off.svg';\nimport $mode_1_on from 'bundle-text:./img/mode_1_on.svg';\nimport $mode_2_off from 'bundle-text:./img/mode_2_off.svg';\nimport $mode_2_on from 'bundle-text:./img/mode_2_on.svg';\nimport $check_on from 'bundle-text:./img/check_on.svg';\nimport $check_off from 'bundle-text:./img/check_off.svg';\n\nexport default class Setting {\n    constructor(art, danmuku) {\n        this.art = art;\n        this.danmuku = danmuku;\n        this.utils = art.constructor.utils;\n\n        const { setStyle } = this.utils;\n        const { $controlsCenter } = art.template;\n        setStyle($controlsCenter, 'display', 'flex');\n\n        this.template = {\n            $controlsCenter,\n            $mount: $controlsCenter,\n            $danmuku: null,\n            $toggle: null,\n            $configModes: null,\n            $styleModes: null,\n            $colors: null,\n            $opacitySlider: null,\n            $opacityValue: null,\n            $marginSlider: null,\n            $marginValue: null,\n            $fontSizeSlider: null,\n            $fontSizeValue: null,\n            $speedSlider: null,\n            $speedValue: null,\n            $input: null,\n            $send: null,\n        };\n\n        this.slider = {\n            opacity: null,\n            margin: null,\n            fontSize: null,\n            speed: null,\n        };\n\n        this.emitting = false;\n        this.isLock = false;\n        this.timer = null;\n\n        this.createTemplate();\n        this.createSliders();\n        this.createEvents();\n\n        this.mount(this.option.mount);\n\n        art.on('fullscreen', (state) => this.onFullscreen(state));\n        art.on('fullscreenWeb', (state) => this.onFullscreen(state));\n    }\n\n    static icons = {\n        $on,\n        $off,\n        $config,\n        $style,\n        $mode_0_off,\n        $mode_0_on,\n        $mode_1_off,\n        $mode_1_on,\n        $mode_2_off,\n        $mode_2_on,\n        $check_on,\n        $check_off,\n    };\n\n    get option() {\n        return this.danmuku.option;\n    }\n\n    get outside() {\n        return this.template.$mount !== this.template.$controlsCenter;\n    }\n\n    get TEMPLATE() {\n        const { option } = this;\n        return `\n            <div class=\"apd-toggle\">\n                ${$on}${$off}\n            </div>\n            <div class=\"apd-config\">\n                ${$config}\n                <div class=\"apd-config-panel\">\n                    <div class=\"apd-config-panel-inner\">\n                        <div class=\"apd-config-mode\">\n                            按类型屏蔽\n                            <div class=\"apd-modes\">\n                                <div data-mode=\"0\" class=\"apd-mode\">\n                                    ${$mode_0_off}${$mode_0_on}\n                                    <div>滚动</div>\n                                </div>\n                                <div data-mode=\"1\" class=\"apd-mode\">\n                                    ${$mode_1_off}${$mode_1_on}\n                                    <div>顶部</div>\n                                </div>\n                                <div data-mode=\"2\" class=\"apd-mode\">\n                                    ${$mode_2_off}${$mode_2_on}\n                                    <div>底部</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"apd-config-other\">\n                            <div class=\"apd-other apd-anti-overlap\">\n                                ${$check_on}${$check_off}\n                                防止弹幕重叠\n                            </div>\n                            <div class=\"apd-other apd-sync-video\">\n                                ${$check_on}${$check_off}\n                                同步视频速度\n                            </div>\n                        </div>\n                        <div class=\"apd-config-slider apd-config-opacity\">\n                            不透明度\n                            <div class=\"apd-slider\"></div>\n                            <div class=\"apd-value\"></div>\n                        </div>\n                        <div class=\"apd-config-slider apd-config-margin\">\n                            显示区域\n                            <div class=\"apd-slider\"></div>\n                            <div class=\"apd-value\"></div>\n                        </div>\n                        <div class=\"apd-config-slider apd-config-fontSize\">\n                            弹幕字号\n                            <div class=\"apd-slider\"></div>\n                            <div class=\"apd-value\"></div>\n                        </div>\n                        <div class=\"apd-config-slider apd-config-speed\">\n                            弹幕速度\n                            <div class=\"apd-slider\"></div>\n                            <div class=\"apd-value\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"apd-emitter\">\n                <div class=\"apd-style\">\n                    ${$style}\n                    <div class=\"apd-style-panel\">\n                        <div class=\"apd-style-panel-inner\">\n                            <div class=\"apd-style-mode\">\n                                模式\n                                <div class=\"apd-modes\">\n                                    <div data-mode=\"0\" class=\"apd-mode\">\n                                        ${$mode_0_on}\n                                        <div>滚动</div>\n                                    </div>\n                                    <div data-mode=\"1\" class=\"apd-mode\">\n                                        ${$mode_1_on}\n                                        <div>顶部</div>\n                                    </div>\n                                    <div data-mode=\"2\" class=\"apd-mode\">\n                                        ${$mode_2_on}\n                                        <div>底部</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"apd-style-color\">\n                                颜色\n                                <div class=\"apd-colors\">\n                                    ${this.COLOR.map((color) => `<div data-color=\"${color}\" class=\"apd-color\" style=\"background-color: ${color}\"></div>`).join('')}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <input class=\"apd-input\" placeholder=\"发个友善的弹幕见证当下\" autocomplete=\"off\" maxLength=\"${option.maxLength}\" />\n                <div class=\"apd-send\">发送</div>\n            </div>\n        `;\n    }\n\n    get MARGIN() {\n        return (\n            this.option.MARGIN || [\n                {\n                    name: '1/4',\n                    value: [10, '75%'],\n                },\n                {\n                    name: '半屏',\n                    value: [10, '50%'],\n                },\n                {\n                    name: '3/4',\n                    value: [10, '25%'],\n                },\n                {\n                    name: '满屏',\n                    value: [10, 10],\n                },\n            ]\n        );\n    }\n\n    get SPEED() {\n        return (\n            this.option.SPEED || [\n                {\n                    name: '极慢',\n                    value: 10,\n                },\n                {\n                    name: '较慢',\n                    value: 7.5,\n                    hide: true,\n                },\n                {\n                    name: '适中',\n                    value: 5,\n                },\n                {\n                    name: '较快',\n                    value: 2.5,\n                    hide: true,\n                },\n                {\n                    name: '极快',\n                    value: 1,\n                },\n            ]\n        );\n    }\n\n    get COLOR() {\n        return (\n            this.option.COLOR || [\n                '#FE0302',\n                '#FF7204',\n                '#FFAA02',\n                '#FFD302',\n                '#FFFF00',\n                '#A0EE00',\n                '#00CD00',\n                '#019899',\n                '#4266BE',\n                '#89D5FF',\n                '#CC0273',\n                '#222222',\n                '#9B9B9B',\n                '#FFFFFF',\n            ]\n        );\n    }\n\n    query(selector) {\n        const { query } = this.utils;\n        const { $danmuku } = this.template;\n        return query(selector, $danmuku);\n    }\n\n    setData(key, value) {\n        const { $player } = this.art.template;\n        const { $mount } = this.template;\n        $player.dataset[key] = value;\n        if (this.outside) {\n            $mount.dataset[key] = value;\n        }\n    }\n\n    createTemplate() {\n        const { createElement, tooltip } = this.utils;\n\n        const $danmuku = createElement('div');\n        $danmuku.className = 'artplayer-plugin-danmuku';\n        $danmuku.innerHTML = this.TEMPLATE;\n        this.template.$danmuku = $danmuku;\n\n        this.template.$toggle = this.query('.apd-toggle');\n        tooltip(this.template.$toggle, '弹幕开关');\n\n        this.template.$configModes = this.query('.apd-config-mode .apd-modes');\n        this.template.$styleModes = this.query('.apd-style-mode .apd-modes');\n        this.template.$colors = this.query('.apd-colors');\n        this.template.$antiOverlap = this.query('.apd-anti-overlap');\n        this.template.$syncVideo = this.query('.apd-sync-video');\n        this.template.$opacitySlider = this.query('.apd-config-opacity .apd-slider');\n        this.template.$opacityValue = this.query('.apd-config-opacity .apd-value');\n        this.template.$marginSlider = this.query('.apd-config-margin .apd-slider');\n        this.template.$marginValue = this.query('.apd-config-margin .apd-value');\n        this.template.$fontSizeSlider = this.query('.apd-config-fontSize .apd-slider');\n        this.template.$fontSizeValue = this.query('.apd-config-fontSize .apd-value');\n        this.template.$speedSlider = this.query('.apd-config-speed .apd-slider');\n        this.template.$speedValue = this.query('.apd-config-speed .apd-value');\n        this.template.$input = this.query('.apd-input');\n        this.template.$send = this.query('.apd-send');\n    }\n\n    createEvents() {\n        const { $toggle, $configModes, $styleModes, $colors, $antiOverlap, $syncVideo, $send, $input } = this.template;\n\n        this.art.proxy($toggle, 'click', () => {\n            this.danmuku.config({\n                visible: !this.option.visible,\n            });\n            this.reset();\n        });\n\n        this.art.proxy($configModes, 'click', (event) => {\n            const $mode = event.target.closest('.apd-mode');\n            if (!$mode) return;\n            const mode = Number($mode.dataset.mode);\n            if (this.option.modes.includes(mode)) {\n                this.danmuku.config({\n                    modes: this.option.modes.filter((m) => m !== mode),\n                });\n            } else {\n                this.danmuku.config({\n                    modes: [...this.option.modes, mode],\n                });\n            }\n            this.reset();\n        });\n\n        this.art.proxy($antiOverlap, 'click', () => {\n            this.danmuku.config({\n                antiOverlap: !this.option.antiOverlap,\n            });\n            this.reset();\n        });\n\n        this.art.proxy($syncVideo, 'click', () => {\n            this.danmuku.config({\n                synchronousPlayback: !this.option.synchronousPlayback,\n            });\n            this.reset();\n        });\n\n        this.art.proxy($styleModes, 'click', (event) => {\n            const $mode = event.target.closest('.apd-mode');\n            if (!$mode) return;\n            const mode = Number($mode.dataset.mode);\n            this.danmuku.config({\n                mode: mode,\n            });\n            this.reset();\n        });\n\n        this.art.proxy($colors, 'click', (event) => {\n            const $color = event.target.closest('.apd-color');\n            if (!$color) return;\n            this.danmuku.config({\n                color: $color.dataset.color,\n            });\n            this.reset();\n        });\n\n        this.art.proxy($send, 'click', () => this.emit());\n\n        this.art.proxy($input, 'keypress', (event) => {\n            if (event.key === 'Enter') {\n                event.preventDefault();\n                this.emit();\n            }\n        });\n    }\n\n    createSliders() {\n        this.slider.opacity = this.createSlider({\n            min: 0,\n            max: 100,\n            steps: [],\n            container: this.template.$opacitySlider,\n            findIndex: () => {\n                return Math.round(this.option.opacity * 100) || 100;\n            },\n            onChange: (index) => {\n                const { $opacityValue } = this.template;\n                $opacityValue.textContent = `${index}%`;\n                this.danmuku.config({\n                    opacity: index / 100,\n                });\n            },\n        });\n\n        this.slider.margin = this.createSlider({\n            min: 0,\n            max: 3,\n            steps: this.MARGIN,\n            container: this.template.$marginSlider,\n            findIndex: () => {\n                return (\n                    this.MARGIN.findIndex(\n                        (item) => item.value[0] === this.option.margin[0] && item.value[1] === this.option.margin[1],\n                    ) || 2\n                );\n            },\n            onChange: (index) => {\n                const margin = this.MARGIN[index];\n                const { $marginValue } = this.template;\n                $marginValue.textContent = margin.name;\n                this.danmuku.config({\n                    margin: margin.value,\n                });\n            },\n        });\n\n        this.slider.fontSize = this.createSlider({\n            min: 1,\n            max: 25,\n            steps: [],\n            container: this.template.$fontSizeSlider,\n            findIndex: () => {\n                const { clientHeight } = this.art.template.$player;\n                if (typeof this.option.fontSize === 'number') {\n                    return Math.round((this.option.fontSize / clientHeight) * 100) || 5;\n                } else {\n                    return Math.round(this.option.fontSize.replace('%', '')) || 5;\n                }\n            },\n            onChange: (index) => {\n                const { $fontSizeValue } = this.template;\n                $fontSizeValue.textContent = `${index}%`;\n                this.danmuku.config({\n                    fontSize: `${index}%`,\n                });\n            },\n        });\n\n        this.slider.speed = this.createSlider({\n            min: 0,\n            max: 4,\n            steps: this.SPEED,\n            container: this.template.$speedSlider,\n            findIndex: () => {\n                return this.SPEED.findIndex((item) => item.value === this.option.speed) || 2;\n            },\n            onChange: (index) => {\n                const speed = this.SPEED[index];\n                const { $speedValue } = this.template;\n                $speedValue.textContent = speed.name;\n                this.danmuku.config({\n                    speed: speed.value,\n                });\n            },\n        });\n    }\n\n    createSlider({ min, max, container, findIndex, onChange, steps = [] }) {\n        const { query, clamp } = this.utils;\n\n        container.innerHTML = `\n            <div class=\"apd-slider-line\">\n                <div class=\"apd-slider-points\">\n                    ${steps.map(() => `<div class=\"apd-slider-point\"></div>`).join('')}\n                </div>\n                <div class=\"apd-slider-progress\"></div>\n            </div>\n            <div class=\"apd-slider-dot\"></div>\n            <div class=\"apd-slider-steps\">\n                ${steps.map((step) => (step.hide ? '' : `<div class=\"apd-slider-step\">${step.name}</div>`)).join('')}\n            </div>\n        `;\n\n        const $dot = query('.apd-slider-dot', container);\n        const $progress = query('.apd-slider-progress', container);\n\n        let isDroging = false;\n\n        function reset(index = findIndex()) {\n            const value = clamp(index, min, max);\n            const percentage = (value - min) / (max - min);\n            $dot.style.left = `${percentage * 100}%`;\n            if (steps.length === 0) {\n                $progress.style.width = $dot.style.left;\n            }\n            onChange(value);\n        }\n\n        function updateLeft(event) {\n            const { left, width } = container.getBoundingClientRect();\n            const value = clamp(event.clientX - left, 0, width);\n            const index = Math.round((value / width) * (max - min) + min);\n            reset(index);\n        }\n\n        this.art.proxy(container, 'click', (event) => {\n            updateLeft(event);\n        });\n\n        this.art.proxy(container, 'mousedown', (event) => {\n            isDroging = event.button === 0;\n        });\n\n        this.art.on('document:mousemove', (event) => {\n            if (isDroging) {\n                updateLeft(event);\n            }\n        });\n\n        this.art.on('document:mouseup', (event) => {\n            if (isDroging) {\n                isDroging = false;\n                updateLeft(event);\n            }\n        });\n\n        return { reset };\n    }\n\n    onFullscreen(state) {\n        if (this.outside) {\n            const { $danmuku, $controlsCenter, $mount } = this.template;\n            if (state) {\n                $controlsCenter.appendChild($danmuku);\n            } else {\n                $mount.appendChild($danmuku);\n            }\n        }\n    }\n\n    async emit() {\n        const { $input } = this.template;\n\n        const text = $input.value.trim();\n        if (!text.length) return;\n        if (this.isLock) return;\n        if (this.emitting) return;\n\n        const danmu = {\n            text: text,\n            mode: this.option.mode,\n            color: this.option.color,\n            time: this.art.currentTime,\n        };\n\n        try {\n            this.emitting = true;\n            const state = await this.option.beforeEmit(danmu);\n            this.emitting = false;\n\n            if (state !== true) return;\n\n            danmu.border = true;\n            delete danmu.time;\n            this.danmuku.emit(danmu);\n            $input.value = '';\n\n            this.lock();\n        } catch (error) {\n            this.emitting = false;\n        }\n    }\n\n    lock() {\n        const { addClass } = this.utils;\n        const { $send } = this.template;\n\n        this.isLock = true;\n        let time = this.option.lockTime;\n        $send.innerText = time;\n        addClass($send, 'apd-lock');\n\n        const loop = () => {\n            this.timer = setTimeout(() => {\n                if (time === 0) {\n                    this.unlock();\n                } else {\n                    time -= 1;\n                    $send.innerText = time;\n                    loop();\n                }\n            }, 1000);\n        };\n\n        loop();\n    }\n\n    unlock() {\n        const { removeClass } = this.utils;\n        const { $send } = this.template;\n        clearTimeout(this.timer);\n        this.isLock = false;\n        $send.innerText = '发送';\n        removeClass($send, 'apd-lock');\n    }\n\n    reset() {\n        this.slider.opacity.reset();\n        this.slider.margin.reset();\n        this.slider.fontSize.reset();\n        this.slider.speed.reset();\n\n        this.setData('danmukuVisible', this.option.visible);\n        this.setData('danmukuMode', this.option.mode);\n        this.setData('danmukuColor', this.option.color);\n        this.setData('danmukuMode0', this.option.modes.includes(0));\n        this.setData('danmukuMode1', this.option.modes.includes(1));\n        this.setData('danmukuMode2', this.option.modes.includes(2));\n        this.setData('danmukuAntiOverlap', this.option.antiOverlap);\n        this.setData('danmukuSyncVideo', this.option.synchronousPlayback);\n        this.setData('danmukuTheme', this.option.theme);\n\n        const { inverseClass } = this.utils;\n        const colors = this.template.$colors.children;\n        const $color = Array.from(colors).find((item) => item.dataset.color === this.option.color.toUpperCase());\n        $color && inverseClass($color, 'apd-active');\n    }\n\n    mount(target = this.template.$controlsCenter) {\n        target.appendChild(this.template.$danmuku);\n        this.template.$mount = target;\n        this.reset();\n    }\n}\n\nif (typeof document !== 'undefined') {\n    const id = 'artplayer-plugin-danmuku';\n    const $style = document.getElementById(id);\n    if ($style) {\n        $style.textContent = style;\n    } else {\n        const $style = document.createElement('style');\n        $style.id = id;\n        $style.textContent = style;\n        document.head.appendChild($style);\n    }\n}\n","module.exports = \"c09c1588fb4faeee\";","module.exports = \"9cb90863dc3c9a4a\";","module.exports = \"628c4c1d1f0914ae\";","module.exports = \"4a37db4fe35f5e6c\";","module.exports = \"8041896cc7b87454\";","module.exports = \"27fd2e805f7e2f23\";","module.exports = \"909d5129494f122f\";","module.exports = \"b7497c63c700b215\";","module.exports = \"46d7b39385b87ee2\";","module.exports = \"cef7220743b52d16\";","module.exports = \"ff5fa44c0fa0d3e8\";","module.exports = \"1a75f737d749272f\";","module.exports = \"24113e84ce531d81\";","const lib = {\n    map(value, inMin, inMax, outMin, outMax) {\n        return ((value - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n    },\n    range(start, end, tick) {\n        const s = Math.round(start / tick) * tick;\n        return Array.from(\n            {\n                length: Math.floor((end - start) / tick),\n            },\n            (v, k) => {\n                return k * tick + s;\n            },\n        );\n    },\n};\n\nconst line = (pointA, pointB) => {\n    const lengthX = pointB[0] - pointA[0];\n    const lengthY = pointB[1] - pointA[1];\n    return {\n        length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n        angle: Math.atan2(lengthY, lengthX),\n    };\n};\n\nexport default function heatmap(art, danmuku, option) {\n    const { query } = art.constructor.utils;\n\n    art.controls.add({\n        name: 'heatmap',\n        position: 'top',\n        html: '',\n        style: {\n            position: 'absolute',\n            top: '-100px',\n            left: '0px',\n            right: '0px',\n            height: '100px',\n            width: '100%',\n            pointerEvents: 'none',\n        },\n        mounted($heatmap) {\n            let $start = null;\n            let $stop = null;\n\n            function update(arg = []) {\n                $start = null;\n                $stop = null;\n                $heatmap.innerHTML = '';\n\n                if (!art.duration || art.option.isLive) return;\n\n                const svg = {\n                    w: $heatmap.offsetWidth,\n                    h: $heatmap.offsetHeight,\n                };\n\n                const options = {\n                    xMin: 0,\n                    xMax: svg.w,\n                    yMin: 0,\n                    yMax: 128,\n                    scale: 0.25,\n                    opacity: 0.2,\n                    minHeight: Math.floor(svg.h * 0.05),\n                    sampling: Math.floor(svg.w / 100),\n                    smoothing: 0.2,\n                    flattening: 0.2,\n                };\n\n                if (typeof option === 'object') {\n                    Object.assign(options, option);\n                }\n\n                let points = [];\n\n                if (Array.isArray(arg) && arg.length) {\n                    points = [...arg];\n                } else {\n                    const gap = art.duration / svg.w;\n                    for (let x = 0; x <= svg.w; x += options.sampling) {\n                        const y = danmuku.danmus.filter(\n                            ({ time }) => time > x * gap && time <= (x + options.sampling) * gap,\n                        ).length;\n                        points.push([x, y]);\n                    }\n                }\n\n                if (points.length === 0) return;\n\n                const lastPoint = points[points.length - 1];\n                const lastX = lastPoint[0];\n                const lastY = lastPoint[1];\n                if (lastX !== svg.w) {\n                    points.push([svg.w, lastY]);\n                }\n\n                const yPoints = points.map((point) => point[1]);\n                const yMin = Math.min(...yPoints);\n                const yMax = Math.max(...yPoints);\n                const yMid = (yMin + yMax) / 2;\n\n                for (let i = 0; i < points.length; i++) {\n                    const point = points[i];\n                    const y = point[1];\n                    point[1] = y * (y > yMid ? 1 + options.scale : 1 - options.scale) + options.minHeight;\n                }\n\n                const controlPoint = (current, previous, next, reverse) => {\n                    const p = previous || current;\n                    const n = next || current;\n                    const o = line(p, n);\n                    const flat = lib.map(Math.cos(o.angle) * options.flattening, 0, 1, 1, 0);\n                    const angle = o.angle * flat + (reverse ? Math.PI : 0);\n                    const length = o.length * options.smoothing;\n                    const x = current[0] + Math.cos(angle) * length;\n                    const y = current[1] + Math.sin(angle) * length;\n                    return [x, y];\n                };\n\n                const bezierCommand = (point, i, a) => {\n                    const cps = controlPoint(a[i - 1], a[i - 2], point);\n                    const cpe = controlPoint(point, a[i - 1], a[i + 1], true);\n                    const close = i === a.length - 1 ? ' z' : '';\n                    return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[1]}${close}`;\n                };\n\n                const pointsPositions = points.map((e) => {\n                    const x = lib.map(e[0], options.xMin, options.xMax, 0, svg.w);\n                    const y = lib.map(e[1], options.yMin, options.yMax, svg.h, 0);\n                    return [x, y];\n                });\n\n                const pathD = pointsPositions.reduce(\n                    (acc, e, i, a) =>\n                        i === 0\n                            ? `M ${a[a.length - 1][0]},${svg.h} L ${e[0]},${svg.h} L ${e[0]},${e[1]}`\n                            : `${acc} ${bezierCommand(e, i, a)}`,\n                    '',\n                );\n\n                $heatmap.innerHTML = `\n                    <svg viewBox=\"0 0 ${svg.w} ${svg.h}\">\n                        <defs>\n                            <linearGradient id=\"heatmap-solids\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                                <stop offset=\"0%\" style=\"stop-color:var(--art-theme);stop-opacity:${options.opacity}\" />\n                                <stop offset=\"0%\" style=\"stop-color:var(--art-theme);stop-opacity:${options.opacity}\" id=\"heatmap-start\" />\n                                <stop offset=\"0%\" style=\"stop-color:var(--art-progress-color);stop-opacity:1\" id=\"heatmap-stop\" />\n                                <stop offset=\"100%\" style=\"stop-color:var(--art-progress-color);stop-opacity:1\" />\n                            </linearGradient>\n                        </defs>\n                        <path fill=\"url(#heatmap-solids)\" d=\"${pathD}\"></path>\n                    </svg>\n                `;\n\n                $start = query('#heatmap-start', $heatmap);\n                $stop = query('#heatmap-stop', $heatmap);\n                $start.setAttribute('offset', `${art.played * 100}%`);\n                $stop.setAttribute('offset', `${art.played * 100}%`);\n            }\n\n            art.on('video:timeupdate', () => {\n                if ($start && $stop) {\n                    $start.setAttribute('offset', `${art.played * 100}%`);\n                    $stop.setAttribute('offset', `${art.played * 100}%`);\n                }\n            });\n\n            art.on('setBar', (type, percentage) => {\n                if ($start && $stop && type === 'played') {\n                    $start.setAttribute('offset', `${percentage * 100}%`);\n                    $stop.setAttribute('offset', `${percentage * 100}%`);\n                }\n            });\n\n            art.on('ready', () => update());\n            art.on('resize', () => update());\n            art.on('artplayerPluginDanmuku:loaded', () => update());\n            art.on('artplayerPluginDanmuku:points', (points) => update(points));\n        },\n    });\n}\n"],"names":[],"version":3,"file":"index.js.map","sourceRoot":"../../../"}