{"mappings":"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","sources":["packages/artplayer-plugin-danmuku/src/index.js","packages/artplayer-plugin-danmuku/src/danmuku.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-17e4dd909398e569.js","packages/artplayer-plugin-danmuku/src/bilibili.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","packages/artplayer-plugin-danmuku/src/heatmap.js","packages/artplayer-plugin-danmuku/src/setting.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-e06b06703f22c8eb.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-ec1a2b323654893d.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-ab14b9be0ece93ac.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-76c315480ca27c87.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-b1458ff964353dd6.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-99ebb9e9ce705f53.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-415105bf9d0dad80.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-87721bd507e67269.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-df0d0cb27ecb2329.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-b2c30279f9ecca46.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-04939e555ef8b080.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-28aea7d78a23879e.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-df41fcd818e2c172.js"],"sourcesContent":["import Danmuku from './danmuku'\nimport heatmap from './heatmap'\nimport Setting from './setting'\n\nexport default function artplayerPluginDanmuku(option) {\n  return (art) => {\n    const danmuku = new Danmuku(art, option)\n    const setting = new Setting(art, danmuku)\n\n    if (danmuku.option.heatmap) {\n      heatmap(art, danmuku, danmuku.option.heatmap)\n    }\n\n    return {\n      name: 'artplayerPluginDanmuku',\n      emit: danmuku.emit.bind(danmuku),\n      load: danmuku.load.bind(danmuku),\n      config: danmuku.config.bind(danmuku),\n      hide: danmuku.hide.bind(danmuku),\n      show: danmuku.show.bind(danmuku),\n      reset: danmuku.reset.bind(danmuku),\n      mount: setting.mount.bind(setting),\n      get option() {\n        return danmuku.option\n      },\n      get isHide() {\n        return danmuku.isHide\n      },\n      get isStop() {\n        return danmuku.isStop\n      },\n    }\n  }\n}\n\nartplayerPluginDanmuku.icons = Setting.icons\n\nif (typeof window !== 'undefined') {\n  window.artplayerPluginDanmuku = artplayerPluginDanmuku\n}\n","import workerText from 'bundle-text:./worker'\nimport { bilibiliDanmuParseFromUrl } from './bilibili'\n\nexport default class Danmuku {\n  constructor(art, option) {\n    const { constructor, template } = art\n\n    this.utils = constructor.utils // 工具库\n    this.validator = constructor.validator // 配置校验器\n    this.$danmuku = template.$danmuku // 弹幕层容器\n    this.$player = template.$player // 播放器容器\n\n    this.art = art\n    this.queue = [] // 实际弹幕队列\n    this.$refs = [] // 弹幕DOM节点池\n    this.isStop = false // 是否停止\n    this.isHide = false // 是否隐藏\n    this.timer = null // 定时器\n    this.index = 0 // 弹幕索引\n\n    // 格式化后的配置项\n    this.option = Danmuku.option\n\n    // 弹幕状态池\n    this.states = { wait: [], ready: [], emit: [], stop: [] }\n\n    // 初始化配置\n    this.config(option, true)\n\n    // 创建 Web Worker, 用于计算弹幕的 top 值\n    const workerText2 = workerText.replace('export{e as default};', '')\n    const blob = new Blob([workerText2], { type: 'application/javascript' })\n    this.worker = new Worker(URL.createObjectURL(blob))\n\n    // 绑定公用事件\n    this.start = this.start.bind(this)\n    this.stop = this.stop.bind(this)\n    this.reset = this.reset.bind(this)\n    this.resize = this.resize.bind(this)\n    this.destroy = this.destroy.bind(this)\n\n    // 监听事件\n    art.on('video:play', this.start)\n    art.on('video:playing', this.start)\n    art.on('video:pause', this.stop)\n    art.on('video:waiting', this.stop)\n    art.on('destroy', this.destroy)\n    art.on('resize', this.resize)\n\n    // 开始加载弹幕\n    this.load()\n  }\n\n  // 默认配置\n  static get option() {\n    return {\n      danmuku: [], // 弹幕数据\n      speed: 5, // 弹幕持续时间，范围在[1 ~ 10]\n      margin: [10, '25%'], // 弹幕上下边距，支持像素数字和百分比\n      opacity: 1, // 弹幕透明度，范围在[0 ~ 1]\n      color: '#FFFFFF', // 默认弹幕颜色，可以被单独弹幕项覆盖\n      mode: 0, // 默认弹幕模式: 0: 滚动，1: 顶部，2: 底部\n      modes: [0, 1, 2], // 弹幕可见的模式\n      fontSize: 25, // 弹幕字体大小，支持像素数字和百分比\n      antiOverlap: true, // 弹幕是否防重叠\n      synchronousPlayback: false, // 是否同步播放速度\n      mount: undefined, // 弹幕发射器挂载点, 默认为播放器控制栏中部\n      heatmap: false, // 是否开启热力图\n      width: 512, // 当播放器宽度小于此值时，弹幕发射器置于播放器底部\n      points: [], // 热力图数据\n      filter: () => true, // 弹幕载入前的过滤器，只支持返回布尔值\n      beforeEmit: () => true, // 弹幕发送前的过滤器，支持返回 Promise\n      beforeVisible: () => true, // 弹幕显示前的过滤器，支持返回 Promise\n      visible: true, // 弹幕层是否可见\n      emitter: true, // 是否开启弹幕发射器\n      maxLength: 200, // 弹幕输入框最大长度, 范围在[1 ~ 1000]\n      lockTime: 5, // 输入框锁定时间，范围在[1 ~ 60]\n      theme: 'dark', // 弹幕主题，支持 dark 和 light，只在自定义挂载时生效\n      OPACITY: {}, // 不透明度配置项\n      FONT_SIZE: {}, // 弹幕字号配置项\n      MARGIN: {}, // 显示区域配置项\n      SPEED: {}, // 弹幕速度配置项\n      COLOR: [], // 颜色列表配置项\n    }\n  }\n\n  // 配置校验\n  static get scheme() {\n    return {\n      danmuku: 'array|function|string',\n      speed: 'number',\n      margin: 'array',\n      opacity: 'number',\n      color: 'string',\n      mode: 'number',\n      modes: 'array',\n      fontSize: 'number|string',\n      antiOverlap: 'boolean',\n      synchronousPlayback: 'boolean',\n      mount: '?htmldivelement|string',\n      heatmap: 'object|boolean',\n      width: 'number',\n      points: 'array',\n      filter: 'function',\n      beforeEmit: 'function',\n      beforeVisible: 'function',\n      visible: 'boolean',\n      emitter: 'boolean',\n      maxLength: 'number',\n      lockTime: 'number',\n      theme: 'string',\n      OPACITY: 'object',\n      FONT_SIZE: 'object',\n      MARGIN: 'object',\n      SPEED: 'object',\n      COLOR: 'array',\n    }\n  }\n\n  // 初始弹幕样式\n  static get cssText() {\n    return `\n            user-select: none;\n            position: absolute;\n            white-space: pre;\n            pointer-events: none;\n            perspective: 500px;\n            display: inline-block;\n            will-change: transform;\n            font-weight: normal;\n            line-height: 1.125;\n            visibility: hidden;\n            font-family: SimHei, \"Microsoft JhengHei\", Arial, Helvetica, sans-serif;\n            text-shadow: rgb(0, 0, 0) 1px 0px 1px, rgb(0, 0, 0) 0px 1px 1px, rgb(0, 0, 0) 0px -1px 1px, rgb(0, 0, 0) -1px 0px 1px;\n        `\n  }\n\n  // 是否在移动端使用了自动旋屏，会影响弹幕的left和top值\n  get isRotate() {\n    return this.art.plugins?.autoOrientation?.state\n  }\n\n  // 计算上空白边距\n  get marginTop() {\n    const { clamp } = this.utils\n    const value = this.option.margin[0]\n    const { clientHeight } = this.$player\n\n    if (typeof value === 'number') {\n      return clamp(value, 0, clientHeight)\n    }\n\n    if (typeof value === 'string' && value.endsWith('%')) {\n      const ratio = Number.parseFloat(value) / 100\n      return clamp(clientHeight * ratio, 0, clientHeight)\n    }\n\n    return Danmuku.option.margin[0]\n  }\n\n  // 计算下空白边距\n  get marginBottom() {\n    const { clamp } = this.utils\n    const value = this.option.margin[1]\n    const { clientHeight } = this.$player\n\n    if (typeof value === 'number') {\n      return clamp(value, 0, clientHeight)\n    }\n\n    if (typeof value === 'string' && value.endsWith('%')) {\n      const ratio = Number.parseFloat(value) / 100\n      return clamp(clientHeight * ratio, 0, clientHeight)\n    }\n\n    return Danmuku.option.margin[1]\n  }\n\n  // 计算弹幕字体大小\n  get fontSize() {\n    const { clamp } = this.utils\n    const { clientHeight } = this.$player\n\n    const fontSize = this.option.fontSize\n\n    if (typeof fontSize === 'number') {\n      return Math.round(clamp(fontSize, 12, clientHeight))\n    }\n\n    if (typeof fontSize === 'string' && fontSize.endsWith('%')) {\n      const ratio = Number.parseFloat(fontSize) / 100\n      return Math.round(clamp(clientHeight * ratio, 12, clientHeight))\n    }\n\n    return Danmuku.option.fontSize\n  }\n\n  // 获取弹幕DOM节点\n  get $ref() {\n    const $ref = this.$refs.pop() || document.createElement('div')\n    $ref.style.cssText = Danmuku.cssText\n    $ref.dataset.mode = ''\n    $ref.dataset.id = ''\n    $ref.className = ''\n    return $ref\n  }\n\n  // 获取准备好发送的弹幕\n  get readys() {\n    const { currentTime } = this.art\n\n    const result = []\n\n    // 有的是ready状态：之前因为弹幕太多而暂停发送的弹幕\n    this.filter('ready', danmu => result.push(danmu))\n\n    // 有的是wait状态：符合时间范围的弹幕\n    this.filter('wait', (danmu) => {\n      if (currentTime + 0.1 >= danmu.time && danmu.time >= currentTime - 0.1) {\n        result.push(danmu)\n      }\n    })\n\n    return result\n  }\n\n  // 可见的弹幕的数据，用于计算下一个弹幕的top值\n  get visibles() {\n    const result = []\n    const { clientWidth } = this.$player\n    const clientLeft = this.getLeft(this.$player)\n\n    this.filter('emit', (danmu) => {\n      const top = danmu.$ref.offsetTop\n      const left = this.getLeft(danmu.$ref) - clientLeft\n      const height = danmu.$ref.clientHeight\n      const width = danmu.$ref.clientWidth\n      const distance = left + width\n      const right = clientWidth - distance\n      const speed = distance / danmu.$restTime\n\n      const emit = {}\n      emit.top = top\n      emit.left = left\n      emit.height = height\n      emit.width = width\n      emit.right = right\n      emit.speed = speed\n      emit.distance = distance\n      emit.time = danmu.$restTime\n      emit.mode = danmu.mode\n\n      result.push(emit)\n    })\n\n    return result\n  }\n\n  // 计算弹幕速度\n  get speed() {\n    return this.option.synchronousPlayback && this.art.playbackRate\n      ? this.option.speed / Number(this.art.playbackRate)\n      : this.option.speed\n  }\n\n  // 加载弹幕\n  async load(danmuku) {\n    const { errorHandle } = this.utils\n\n    let danmus = []\n    const target = danmuku || this.option.danmuku\n\n    try {\n      if (typeof target === 'function') {\n        danmus = await target() // 异步函数获取\n      }\n      else if (target instanceof Promise) {\n        danmus = await target // 从 Promise 对象获取\n      }\n      else if (typeof target === 'string') {\n        danmus = await bilibiliDanmuParseFromUrl(target) // 从B站xml链接解析\n      }\n      else if (Array.isArray(target)) {\n        danmus = target // 直接传入数组\n      }\n\n      errorHandle(Array.isArray(danmus), 'Danmuku need return an array as result')\n\n      // 假如没有传入弹幕参数，则清空弹幕，否则追加弹幕\n      if (danmuku === undefined) {\n        this.reset() // 重置弹幕\n        this.queue = [] // 清空弹幕队列\n        this.states = { wait: [], ready: [], emit: [], stop: [] } // 清空弹幕状态池\n        this.$refs = [] // 清空弹幕DOM节点池\n        this.$danmuku.textContent = '' // 清空弹幕层\n      }\n\n      // 逐个验证原始弹幕并转换到弹幕队列\n      for (let index = 0; index < danmus.length; index++) {\n        const danmu = danmus[index]\n        await this.emit(danmu)\n      }\n\n      this.art.emit('artplayerPluginDanmuku:loaded', this.queue)\n    }\n    catch (error) {\n      this.art.emit('artplayerPluginDanmuku:error', error)\n      throw error\n    }\n\n    return this\n  }\n\n  // 把原始弹幕转换到弹幕队列\n  async emit(danmu) {\n    const { clamp } = this.utils\n\n    this.validator(danmu, {\n      id: '?string', // 弹幕唯一标识\n      text: 'string', // 弹幕文本\n      mode: '?number', // 弹幕模式: 0: 滚动，1: 顶部，2: 底部\n      color: '?string', // 弹幕颜色\n      time: '?number', // 弹幕时间\n      border: '?boolean', // 弹幕是否有边框\n      style: '?object', // 弹幕额外样式\n    })\n\n    // 弹幕文本为空则直接忽略\n    if (!danmu.text.trim())\n      return this\n\n    // 设置弹幕时间，如果没有则默认为当前时间加 0.5 秒\n    if (danmu.time) {\n      danmu.time = clamp(danmu.time, 0, Infinity)\n    }\n    else {\n      danmu.time = this.art.currentTime + 0.5\n    }\n\n    // 设置弹幕模式，如果没有则默认为全局配置\n    if (danmu.mode === undefined) {\n      danmu.mode = this.option.mode\n    }\n\n    // 设置弹幕单独样式，如果没有则默认为空对象\n    if (danmu.style === undefined) {\n      danmu.style = {}\n    }\n\n    // 设置弹幕颜色，如果没有则默认为全局配置\n    if (danmu.color === undefined) {\n      danmu.color = this.option.color\n    }\n\n    // 弹幕模式只能是 0, 1, 2\n    if (![0, 1, 2].includes(danmu.mode))\n      return this\n\n    // 自定义弹幕过滤函数\n    if (!this.option.filter(danmu))\n      return this\n\n    // 添加自定义属性\n    const item = {\n      ...danmu,\n      $state: 'wait', // 弹幕初始状态\n      $index: this.index++, // 弹幕索引\n      $ref: null, // 弹幕 DOM 节点\n      $restTime: 0, // 弹幕剩余时间\n      $lastStartTime: 0, // 弹幕上次开始时间\n    }\n\n    // 转换为wait状态\n    this.setState(item, 'wait')\n\n    // 添加到实际弹幕队列\n    this.queue.push(item)\n\n    // 弹幕有四个状态：\n    // - wait: 弹幕还未开始显示，没有被添加到 DOM 中\n    // - ready: 弹幕准备好显示，没有被添加到 DOM 中\n    // - emit: 弹幕正在显示，已经被添加到 DOM 中\n    // - stop: 弹幕正在停止显示，已经被添加到 DOM 中\n\n    return this\n  }\n\n  // 动态配置\n  config(option, isInit = false) {\n    const { clamp } = this.utils\n    const { $controlsCenter } = this.art.template\n\n    // 判断配置项是否有变化\n    const changed = Object.keys(option).some(\n      key => JSON.stringify(this.option[key]) !== JSON.stringify(option[key]),\n    )\n\n    // 没有变化则直接返回\n    if (!changed && !isInit)\n      return this\n\n    // 更新配置项\n    this.option = Object.assign({}, Danmuku.option, this.option, option)\n    this.validator(this.option, Danmuku.scheme)\n\n    this.option.mode = clamp(this.option.mode, 0, 2)\n    this.option.speed = clamp(this.option.speed, 1, 10)\n    this.option.opacity = clamp(this.option.opacity, 0, 1)\n    this.option.lockTime = clamp(this.option.lockTime, 1, 60)\n    this.option.maxLength = clamp(this.option.maxLength, 1, 1000)\n    this.option.mount = this.option.mount || $controlsCenter\n\n    // 动态配置有字体大小，需要重新渲染\n    if (option.fontSize) {\n      this.reset()\n    }\n\n    // 通过配置项控制弹幕的显示和隐藏\n    if (this.option.visible) {\n      this.show()\n    }\n    else {\n      this.hide()\n    }\n\n    this.art.emit('artplayerPluginDanmuku:config', this.option)\n\n    return this\n  }\n\n  // 计算DOM的left值，受到旋屏影响\n  getLeft($ref) {\n    const rect = $ref.getBoundingClientRect()\n    return this.isRotate ? rect.top : rect.left\n  }\n\n  // 复杂运算交给 Web Worker 处理\n  postMessage(message = {}) {\n    return new Promise((resolve) => {\n      message.id = Date.now() // 生成唯一标识\n      this.worker.postMessage(message)\n      this.worker.onmessage = (event) => {\n        const { data } = event\n        // 判断是否是当前的消息\n        if (data.id === message.id) {\n          resolve(data)\n        }\n      }\n    })\n  }\n\n  // 根据状态获取弹幕\n  filter(state, callback) {\n    const danmus = this.states[state] || []\n    for (let index = 0; index < danmus.length; index++) {\n      callback(danmus[index])\n    }\n    return danmus\n  }\n\n  // 设置弹幕状态\n  setState(danmu, state) {\n    // 从原状态池中删除\n    this.states[danmu.$state] = this.states[danmu.$state].filter(item => item !== danmu)\n\n    // 设置新状态\n    danmu.$state = state\n\n    // 设置DOM节点状态\n    if (danmu.$ref) {\n      danmu.$ref.dataset.state = state\n    }\n\n    // 添加到新状态池中\n    this.states[state].push(danmu)\n  }\n\n  // 重置弹幕到wait状态，回收弹幕DOM节点\n  makeWait(danmu) {\n    this.setState(danmu, 'wait')\n    if (danmu.$ref) {\n      danmu.$ref.style.cssText = Danmuku.cssText\n      danmu.$ref.style.visibility = 'hidden'\n      danmu.$ref.style.marginLeft = '0px'\n      danmu.$ref.style.transform = 'translateX(0px)'\n      danmu.$ref.style.transition = 'transform 0s linear 0s'\n      this.$refs.push(danmu.$ref)\n      danmu.$ref = null\n    }\n  }\n\n  // 实时更新弹幕\n  update() {\n    const { setStyles } = this.utils\n\n    this.timer = window.requestAnimationFrame(async () => {\n      if (this.art.playing && !this.isHide) {\n        // 实时计算弹幕的剩余显示时间\n        this.filter('emit', (danmu) => {\n          const emitTime = (Date.now() - danmu.$lastStartTime) / 1000\n          danmu.$restTime -= emitTime\n          danmu.$lastStartTime = Date.now()\n          // 超过时间即重置弹幕\n          if (danmu.$restTime <= 0) {\n            this.makeWait(danmu)\n          }\n        })\n\n        // 获取准备好发送的弹幕，可能包含ready和wait状态的弹幕\n        const readys = this.readys\n\n        for (let index = 0; index < readys.length; index++) {\n          const danmu = readys[index]\n\n          // 弹幕发送前的过滤器\n          const state = await this.option.beforeVisible(danmu)\n\n          if (state) {\n            const { clientWidth, clientHeight } = this.$player\n            danmu.$ref = this.$ref // 获取弹幕DOM节点\n            danmu.$ref.textContent = danmu.text // 设置弹幕文本\n\n            // 提前添加到弹幕层中，用于计算top值\n            this.$danmuku.appendChild(danmu.$ref)\n\n            // 设置初始弹幕样式\n            danmu.$ref.style.opacity = this.option.opacity\n            danmu.$ref.style.fontSize = `${this.fontSize}px`\n            danmu.$ref.style.color = danmu.color\n            danmu.$ref.style.border = danmu.border ? `1px solid ${danmu.color}` : null\n            danmu.$ref.style.backgroundColor = danmu.border ? 'rgb(0 0 0 / 50%)' : null\n\n            // 设置单独弹幕样式\n            setStyles(danmu.$ref, danmu.style)\n\n            // 记录弹幕时间戳\n            danmu.$lastStartTime = Date.now()\n\n            // 计算弹幕剩余时间\n            danmu.$restTime = this.speed\n\n            // 计算弹幕滚动的距离\n            const distance = clientWidth + danmu.$ref.clientWidth\n\n            // 计算弹幕的top值\n            const { result: top } = await this.postMessage({\n              type: 'getDanmuTop',\n              target: {\n                mode: danmu.mode,\n                height: danmu.$ref.clientHeight,\n                speed: distance / danmu.$restTime,\n              }, // 当前弹幕信息\n              visibles: this.visibles, // 可见的弹幕的数据\n              antiOverlap: this.option.antiOverlap,\n              clientWidth,\n              clientHeight,\n              marginBottom: this.marginBottom,\n              marginTop: this.marginTop,\n            })\n\n            if (danmu.$ref) {\n              if (!this.isStop && top !== undefined) {\n                this.setState(danmu, 'emit') // 转换为emit状态\n                danmu.$ref.style.top = `${top}px`\n                danmu.$ref.style.visibility = 'visible'\n                danmu.$ref.dataset.mode = danmu.mode // CSS控制模式的显示和隐藏\n                danmu.$ref.dataset.id = danmu.id || '' // 用于悬停的唯一标识\n\n                switch (danmu.mode) {\n                  // 滚动的弹幕\n                  case 0: {\n                    danmu.$ref.style.left = `${clientWidth}px`\n                    danmu.$ref.style.marginLeft = '0px'\n                    danmu.$ref.style.transform = `translateX(${-distance}px)`\n                    danmu.$ref.style.transition = `transform ${danmu.$restTime}s linear 0s`\n                    break\n                  }\n                  case 1:\n                    // falls through\n                  case 2:\n                    danmu.$ref.style.left = '50%'\n                    danmu.$ref.style.marginLeft = `-${danmu.$ref.clientWidth / 2}px`\n                    break\n                  default:\n                    break\n                }\n\n                this.art.emit('artplayerPluginDanmuku:visible', danmu)\n              }\n              else {\n                // 假如弹幕已经停止或者没有 top 值，则重置弹幕为ready状态，回收弹幕DOM节点，等待下次发送\n                this.setState(danmu, 'ready')\n                this.$refs.push(danmu.$ref)\n                danmu.$ref = null\n              }\n            }\n          }\n        }\n      }\n\n      // 递归调用\n      if (!this.isStop) {\n        this.update()\n      }\n    })\n    return this\n  }\n\n  // 重置正在显示的弹幕: stop/emit 状态的弹幕\n  resize() {\n    const { clientWidth } = this.$player\n\n    this.filter('stop', (danmu) => {\n      switch (danmu.mode) {\n        // 滚动的弹幕\n        case 0:\n          danmu.$ref.style.left = `${clientWidth}px`\n          break\n        default:\n          break\n      }\n    })\n\n    this.filter('emit', (danmu) => {\n      danmu.$lastStartTime = Date.now()\n      switch (danmu.mode) {\n        // 滚动的弹幕\n        case 0: {\n          const distance = clientWidth + danmu.$ref.clientWidth\n          danmu.$ref.style.left = `${clientWidth}px`\n          danmu.$ref.style.transform = `translateX(${-distance}px)`\n          danmu.$ref.style.transition = `transform ${danmu.$restTime}s linear 0s`\n          break\n        }\n        default:\n          break\n      }\n    })\n  }\n\n  // 继续弹幕\n  continue() {\n    const { clientWidth } = this.$player\n    this.filter('stop', (danmu) => {\n      this.setState(danmu, 'emit') // 转换为emit状态\n      danmu.$lastStartTime = Date.now()\n      switch (danmu.mode) {\n        // 继续滚动的弹幕\n        case 0: {\n          const distance = clientWidth + danmu.$ref.clientWidth\n          danmu.$ref.style.transform = `translateX(${-distance}px)`\n          danmu.$ref.style.transition = `transform ${danmu.$restTime}s linear 0s`\n          break\n        }\n        default:\n          break\n      }\n    })\n\n    return this\n  }\n\n  // 暂停弹幕\n  suspend() {\n    const { clientWidth } = this.$player\n    this.filter('emit', (danmu) => {\n      this.setState(danmu, 'stop') // 转换为stop状态\n      switch (danmu.mode) {\n        // 停止滚动的弹幕\n        case 0: {\n          const translateX = clientWidth - (this.getLeft(danmu.$ref) - this.getLeft(this.$player))\n          danmu.$ref.style.transform = `translateX(${-translateX}px)`\n          danmu.$ref.style.transition = 'transform 0s linear 0s'\n          break\n        }\n        default:\n          break\n      }\n    })\n\n    return this\n  }\n\n  stop() {\n    this.isStop = true\n    this.suspend()\n    window.cancelAnimationFrame(this.timer)\n    this.art.emit('artplayerPluginDanmuku:stop')\n    return this\n  }\n\n  start() {\n    this.isStop = false\n    this.continue()\n    this.update()\n    this.art.emit('artplayerPluginDanmuku:start')\n    return this\n  }\n\n  reset() {\n    this.queue.forEach(danmu => this.makeWait(danmu))\n    this.art.emit('artplayerPluginDanmuku:reset')\n    return this\n  }\n\n  show() {\n    this.isHide = false\n    this.$danmuku.style.opacity = 1\n    this.option.visible = true\n    this.art.emit('artplayerPluginDanmuku:show')\n    return this\n  }\n\n  hide() {\n    this.isHide = true\n    this.$danmuku.style.opacity = 0\n    this.option.visible = false\n    this.art.emit('artplayerPluginDanmuku:hide')\n    return this\n  }\n\n  destroy() {\n    this.stop()\n    this.worker.terminate()\n    this.art.off('video:play', this.start)\n    this.art.off('video:playing', this.start)\n    this.art.off('video:pause', this.stop)\n    this.art.off('video:waiting', this.stop)\n    this.art.off('resize', this.reset)\n    this.art.off('destroy', this.destroy)\n    this.art.emit('artplayerPluginDanmuku:destroy')\n  }\n}\n","module.exports = \"07cc0a7cc35c8e4c\";","function getMode(key) {\n  switch (key) {\n    case 1:\n    case 2:\n    case 3:\n      return 0\n    case 4:\n      return 2\n    case 5:\n      return 1\n    default:\n      return 0\n  }\n}\n\nfunction bilibiliDanmuParseFromXml(xmlString) {\n  if (typeof xmlString !== 'string')\n    return []\n  const reg = /<d[^>]*?p=\"(?<p>[^\"]+)\"[^>]*>(?<text>.*?)<\\/d>/gs\n  const matches = xmlString.matchAll(reg)\n  return Array.from(matches)\n    .map((match) => {\n      const attr = match.groups.p.split(',')\n      if (attr.length >= 8) {\n        const text = match.groups.text\n          .trim()\n          .replaceAll('&quot;', '\"')\n          .replaceAll('&apos;', '\\'')\n          .replaceAll('&lt;', '<')\n          .replaceAll('&gt;', '>')\n          .replaceAll('&amp;', '&')\n\n        return {\n          text,\n          time: Number(attr[0]),\n          mode: getMode(Number(attr[1])),\n          fontSize: Number(attr[2]),\n          color: `#${Number(attr[3]).toString(16)}`,\n          timestamp: Number(attr[4]),\n          pool: Number(attr[5]),\n          userID: attr[6],\n          rowID: Number(attr[7]),\n        }\n      }\n      else {\n        return null\n      }\n    })\n    .filter(Boolean)\n}\n\nfunction onmessage({ data }) {\n  const { xml, id } = data\n  if (!id || !xml)\n    return\n  const danmus = bilibiliDanmuParseFromXml(xml)\n  globalThis.postMessage({ danmus, id })\n}\n\nfunction createWorker() {\n  const workerText = `\n        ${getMode.toString()}\n        ${bilibiliDanmuParseFromXml.toString()}\n        onmessage = ${onmessage.toString()}\n    `\n  const blob = new Blob([workerText], { type: 'application/javascript' })\n  return new Worker(URL.createObjectURL(blob))\n}\n\nexport function bilibiliDanmuParseFromUrl(url) {\n  // eslint-disable-next-line no-async-promise-executor\n  return new Promise(async (resolve) => {\n    const res = await fetch(url)\n    const xml = await res.text()\n\n    try {\n      const worker = createWorker()\n      worker.onmessage = (event) => {\n        const { danmus, id } = event.data\n        if (!id || !danmus)\n          return\n        resolve(danmus)\n        worker.terminate()\n      }\n      worker.postMessage({ xml, id: Date.now() })\n    }\n    catch (error) {\n      console.error('Error parsing Bilibili Danmu:', error)\n      const danmus = bilibiliDanmuParseFromXml(xml)\n      resolve(danmus)\n    }\n  })\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","const lib = {\n  map(value, inMin, inMax, outMin, outMax) {\n    return ((value - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin\n  },\n  range(start, end, tick) {\n    const s = Math.round(start / tick) * tick\n    return Array.from(\n      {\n        length: Math.floor((end - start) / tick),\n      },\n      (v, k) => {\n        return k * tick + s\n      },\n    )\n  },\n}\n\nfunction line(pointA, pointB) {\n  const lengthX = pointB[0] - pointA[0]\n  const lengthY = pointB[1] - pointA[1]\n  return {\n    length: Math.sqrt(lengthX ** 2 + lengthY ** 2),\n    angle: Math.atan2(lengthY, lengthX),\n  }\n}\n\nexport default function heatmap(art, danmuku, option) {\n  const { query } = art.constructor.utils\n\n  art.controls.add({\n    name: 'heatmap',\n    position: 'top',\n    html: '',\n    style: {\n      position: 'absolute',\n      top: '-100px',\n      left: '0px',\n      right: '0px',\n      height: '100px',\n      width: '100%',\n      pointerEvents: 'none',\n    },\n    mounted($heatmap) {\n      let $start = null\n      let $stop = null\n\n      function update(arg = []) {\n        $start = null\n        $stop = null\n        $heatmap.innerHTML = ''\n\n        if (!art.duration || art.option.isLive)\n          return\n\n        const svg = {\n          w: $heatmap.offsetWidth,\n          h: $heatmap.offsetHeight,\n        }\n\n        const options = {\n          xMin: 0,\n          xMax: svg.w,\n          yMin: 0,\n          yMax: 128,\n          scale: 0.25,\n          opacity: 0.2,\n          minHeight: Math.floor(svg.h * 0.05),\n          sampling: Math.floor(svg.w / 100),\n          smoothing: 0.2,\n          flattening: 0.2,\n        }\n\n        if (typeof option === 'object') {\n          Object.assign(options, option)\n        }\n\n        let points = []\n\n        if (Array.isArray(arg) && arg.length) {\n          points = [...arg]\n        }\n        else {\n          const gap = art.duration / svg.w\n          for (let x = 0; x <= svg.w; x += options.sampling) {\n            const y = danmuku.queue.filter(\n              ({ time }) => time > x * gap && time <= (x + options.sampling) * gap,\n            ).length\n            points.push([x, y])\n          }\n        }\n\n        if (points.length === 0)\n          return\n\n        const lastPoint = points[points.length - 1]\n        const lastX = lastPoint[0]\n        const lastY = lastPoint[1]\n        if (lastX !== svg.w) {\n          points.push([svg.w, lastY])\n        }\n\n        const yPoints = points.map(point => point[1])\n        const yMin = Math.min(...yPoints)\n        const yMax = Math.max(...yPoints)\n        const yMid = (yMin + yMax) / 2\n\n        for (let i = 0; i < points.length; i++) {\n          const point = points[i]\n          const y = point[1]\n          point[1] = y * (y > yMid ? 1 + options.scale : 1 - options.scale) + options.minHeight\n        }\n\n        const controlPoint = (current, previous, next, reverse) => {\n          const p = previous || current\n          const n = next || current\n          const o = line(p, n)\n          const flat = lib.map(Math.cos(o.angle) * options.flattening, 0, 1, 1, 0)\n          const angle = o.angle * flat + (reverse ? Math.PI : 0)\n          const length = o.length * options.smoothing\n          const x = current[0] + Math.cos(angle) * length\n          const y = current[1] + Math.sin(angle) * length\n          return [x, y]\n        }\n\n        const bezierCommand = (point, i, a) => {\n          const cps = controlPoint(a[i - 1], a[i - 2], point)\n          const cpe = controlPoint(point, a[i - 1], a[i + 1], true)\n          const close = i === a.length - 1 ? ' z' : ''\n          return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[1]}${close}`\n        }\n\n        const pointsPositions = points.map((e) => {\n          const x = lib.map(e[0], options.xMin, options.xMax, 0, svg.w)\n          const y = lib.map(e[1], options.yMin, options.yMax, svg.h, 0)\n          return [x, y]\n        })\n\n        const pathD = pointsPositions.reduce(\n          (acc, e, i, a) =>\n            i === 0\n              ? `M ${a[a.length - 1][0]},${svg.h} L ${e[0]},${svg.h} L ${e[0]},${e[1]}`\n              : `${acc} ${bezierCommand(e, i, a)}`,\n          '',\n        )\n\n        $heatmap.innerHTML = `\n                    <svg viewBox=\"0 0 ${svg.w} ${svg.h}\">\n                        <defs>\n                            <linearGradient id=\"heatmap-solids\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                                <stop offset=\"0%\" style=\"stop-color:var(--art-theme);stop-opacity:${options.opacity}\" />\n                                <stop offset=\"0%\" style=\"stop-color:var(--art-theme);stop-opacity:${options.opacity}\" id=\"heatmap-start\" />\n                                <stop offset=\"0%\" style=\"stop-color:var(--art-progress-color);stop-opacity:1\" id=\"heatmap-stop\" />\n                                <stop offset=\"100%\" style=\"stop-color:var(--art-progress-color);stop-opacity:1\" />\n                            </linearGradient>\n                        </defs>\n                        <path fill=\"url(#heatmap-solids)\" d=\"${pathD}\"></path>\n                    </svg>\n                `\n\n        $start = query('#heatmap-start', $heatmap)\n        $stop = query('#heatmap-stop', $heatmap)\n        $start.setAttribute('offset', `${art.played * 100}%`)\n        $stop.setAttribute('offset', `${art.played * 100}%`)\n      }\n\n      art.on('video:timeupdate', () => {\n        if ($start && $stop) {\n          $start.setAttribute('offset', `${art.played * 100}%`)\n          $stop.setAttribute('offset', `${art.played * 100}%`)\n        }\n      })\n\n      art.on('setBar', (type, percentage) => {\n        if ($start && $stop && type === 'played') {\n          $start.setAttribute('offset', `${percentage * 100}%`)\n          $stop.setAttribute('offset', `${percentage * 100}%`)\n        }\n      })\n\n      art.on('ready', () => update())\n      art.on('resize', () => update())\n      art.on('artplayerPluginDanmuku:loaded', () => update())\n      art.on('artplayerPluginDanmuku:points', points => update(points))\n    },\n  })\n}\n","import $check_off from 'bundle-text:./img/check_off.svg'\nimport $check_on from 'bundle-text:./img/check_on.svg'\nimport $config from 'bundle-text:./img/config.svg'\nimport $mode_0_off from 'bundle-text:./img/mode_0_off.svg'\nimport $mode_0_on from 'bundle-text:./img/mode_0_on.svg'\nimport $mode_1_off from 'bundle-text:./img/mode_1_off.svg'\nimport $mode_1_on from 'bundle-text:./img/mode_1_on.svg'\nimport $mode_2_off from 'bundle-text:./img/mode_2_off.svg'\nimport $mode_2_on from 'bundle-text:./img/mode_2_on.svg'\nimport $off from 'bundle-text:./img/off.svg'\nimport $on from 'bundle-text:./img/on.svg'\nimport $style from 'bundle-text:./img/style.svg'\nimport style from 'bundle-text:./style.less'\n\nexport default class Setting {\n  constructor(art, danmuku) {\n    this.art = art\n    this.danmuku = danmuku\n    this.utils = art.constructor.utils\n\n    const { setStyle } = this.utils\n    const { $controlsCenter } = art.template\n    setStyle($controlsCenter, 'display', 'flex')\n\n    this.template = {\n      $controlsCenter,\n      $mount: $controlsCenter,\n      $danmuku: null,\n      $toggle: null,\n      $config: null,\n      $configPanel: null,\n      $configModes: null,\n      $style: null,\n      $stylePanel: null,\n      $styleModes: null,\n      $colors: null,\n      $opacitySlider: null,\n      $opacityValue: null,\n      $marginSlider: null,\n      $marginValue: null,\n      $fontSizeSlider: null,\n      $fontSizeValue: null,\n      $speedSlider: null,\n      $speedValue: null,\n      $input: null,\n      $send: null,\n    }\n\n    this.slider = {\n      opacity: null,\n      margin: null,\n      fontSize: null,\n      speed: null,\n    }\n\n    this.emitting = false\n    this.isLock = false\n    this.timer = null\n\n    this.createTemplate()\n    this.createSliders()\n    this.createEvents()\n\n    this.mount(this.option.mount)\n\n    art.on('resize', () => this.resize())\n    art.on('fullscreen', state => this.onFullscreen(state))\n    art.on('fullscreenWeb', state => this.onFullscreen(state))\n\n    art.proxy(this.template.$config, 'mouseenter', () => {\n      this.onMouseEnter({\n        $control: this.template.$config,\n        $panel: this.template.$configPanel,\n      })\n    })\n\n    art.proxy(this.template.$style, 'mouseenter', () => {\n      this.onMouseEnter({\n        $control: this.template.$style,\n        $panel: this.template.$stylePanel,\n      })\n    })\n  }\n\n  static get icons() {\n    return {\n      $on,\n      $off,\n      $config,\n      $style,\n      $mode_0_off,\n      $mode_0_on,\n      $mode_1_off,\n      $mode_1_on,\n      $mode_2_off,\n      $mode_2_on,\n      $check_on,\n      $check_off,\n    }\n  }\n\n  get option() {\n    return this.danmuku.option\n  }\n\n  get outside() {\n    return this.template.$mount !== this.template.$controlsCenter\n  }\n\n  get TEMPLATE() {\n    const { option } = this\n    return `\n            <div class=\"apd-toggle\">\n                ${$on}${$off}\n            </div>\n            <div class=\"apd-config\">\n                ${$config}\n                <div class=\"apd-config-panel\">\n                    <div class=\"apd-config-panel-inner\">\n                        <div class=\"apd-config-mode\">\n                            按类型屏蔽\n                            <div class=\"apd-modes\">\n                                <div data-mode=\"0\" class=\"apd-mode\">\n                                    ${$mode_0_off}${$mode_0_on}\n                                    <div>滚动</div>\n                                </div>\n                                <div data-mode=\"1\" class=\"apd-mode\">\n                                    ${$mode_1_off}${$mode_1_on}\n                                    <div>顶部</div>\n                                </div>\n                                <div data-mode=\"2\" class=\"apd-mode\">\n                                    ${$mode_2_off}${$mode_2_on}\n                                    <div>底部</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"apd-config-other\">\n                            <div class=\"apd-other apd-anti-overlap\">\n                                ${$check_on}${$check_off}\n                                防止弹幕重叠\n                            </div>\n                            <div class=\"apd-other apd-sync-video\">\n                                ${$check_on}${$check_off}\n                                同步视频速度\n                            </div>\n                        </div>\n                        <div class=\"apd-config-slider apd-config-opacity\">\n                            不透明度\n                            <div class=\"apd-slider\"></div>\n                            <div class=\"apd-value\">未知</div>\n                        </div>\n                        <div class=\"apd-config-slider apd-config-margin\">\n                            显示区域\n                            <div class=\"apd-slider\"></div>\n                            <div class=\"apd-value\">未知</div>\n                        </div>\n                        <div class=\"apd-config-slider apd-config-fontSize\">\n                            弹幕字号\n                            <div class=\"apd-slider\"></div>\n                            <div class=\"apd-value\">未知</div>\n                        </div>\n                        <div class=\"apd-config-slider apd-config-speed\">\n                            弹幕速度\n                            <div class=\"apd-slider\"></div>\n                            <div class=\"apd-value\">未知</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"apd-emitter\">\n                <div class=\"apd-style\">\n                    ${$style}\n                    <div class=\"apd-style-panel\">\n                        <div class=\"apd-style-panel-inner\">\n                            <div class=\"apd-style-mode\">\n                                模式\n                                <div class=\"apd-modes\">\n                                    <div data-mode=\"0\" class=\"apd-mode\">\n                                        ${$mode_0_on}\n                                        <div>滚动</div>\n                                    </div>\n                                    <div data-mode=\"1\" class=\"apd-mode\">\n                                        ${$mode_1_on}\n                                        <div>顶部</div>\n                                    </div>\n                                    <div data-mode=\"2\" class=\"apd-mode\">\n                                        ${$mode_2_on}\n                                        <div>底部</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"apd-style-color\">\n                                颜色\n                                <div class=\"apd-colors\">\n                                    ${this.COLOR.map(color => `<div data-color=\"${color}\" class=\"apd-color\" style=\"background-color: ${color}\"></div>`).join('')}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <input class=\"apd-input\" placeholder=\"发个友善的弹幕见证当下\" autocomplete=\"off\" maxLength=\"${option.maxLength}\" />\n                <div class=\"apd-send\">发送</div>\n            </div>\n        `\n  }\n\n  get OPACITY() {\n    return {\n      min: 0,\n      max: 100,\n      steps: [],\n      ...this.option.OPACITY,\n    }\n  }\n\n  get FONT_SIZE() {\n    return {\n      min: 12,\n      max: 120,\n      steps: [],\n      ...this.option.FONT_SIZE,\n    }\n  }\n\n  get MARGIN() {\n    return {\n      min: 0,\n      max: 3,\n      steps: [\n        {\n          name: '1/4',\n          value: [10, '75%'],\n        },\n        {\n          name: '半屏',\n          value: [10, '50%'],\n        },\n        {\n          name: '3/4',\n          value: [10, '25%'],\n        },\n        {\n          name: '满屏',\n          value: [10, 10],\n        },\n      ],\n      ...this.option.MARGIN,\n    }\n  }\n\n  get SPEED() {\n    return {\n      min: 0,\n      max: 4,\n      steps: [\n        {\n          name: '极慢',\n          value: 10,\n        },\n        {\n          name: '较慢',\n          value: 7.5,\n          hide: true,\n        },\n        {\n          name: '适中',\n          value: 5,\n        },\n        {\n          name: '较快',\n          value: 2.5,\n          hide: true,\n        },\n        {\n          name: '极快',\n          value: 1,\n        },\n      ],\n      ...this.option.SPEED,\n    }\n  }\n\n  get COLOR() {\n    return this.option.COLOR.length\n      ? this.option.COLOR\n      : [\n          '#FE0302',\n          '#FF7204',\n          '#FFAA02',\n          '#FFD302',\n          '#FFFF00',\n          '#A0EE00',\n          '#00CD00',\n          '#019899',\n          '#4266BE',\n          '#89D5FF',\n          '#CC0273',\n          '#222222',\n          '#9B9B9B',\n          '#FFFFFF',\n        ]\n  }\n\n  query(selector) {\n    const { query } = this.utils\n    const { $danmuku } = this.template\n    return query(selector, $danmuku)\n  }\n\n  append(el, target) {\n    const { append } = this.utils\n    const children = [...el.children]\n    if (children.includes(target))\n      return\n    append(el, target)\n  }\n\n  setData(key, value) {\n    const { $player } = this.art.template\n    const { $mount } = this.template\n    $player.dataset[key] = value\n    if (this.outside) {\n      $mount.dataset[key] = value\n    }\n  }\n\n  createTemplate() {\n    const { createElement, tooltip } = this.utils\n\n    const $danmuku = createElement('div')\n    $danmuku.className = 'artplayer-plugin-danmuku'\n    $danmuku.innerHTML = this.TEMPLATE\n\n    this.template.$danmuku = $danmuku\n    this.template.$toggle = this.query('.apd-toggle')\n    this.template.$config = this.query('.apd-config')\n    this.template.$configPanel = this.query('.apd-config-panel')\n    this.template.$configModes = this.query('.apd-config-mode .apd-modes')\n    this.template.$style = this.query('.apd-style')\n    this.template.$stylePanel = this.query('.apd-style-panel')\n    this.template.$styleModes = this.query('.apd-style-mode .apd-modes')\n    this.template.$colors = this.query('.apd-colors')\n    this.template.$antiOverlap = this.query('.apd-anti-overlap')\n    this.template.$syncVideo = this.query('.apd-sync-video')\n    this.template.$opacitySlider = this.query('.apd-config-opacity .apd-slider')\n    this.template.$opacityValue = this.query('.apd-config-opacity .apd-value')\n    this.template.$marginSlider = this.query('.apd-config-margin .apd-slider')\n    this.template.$marginValue = this.query('.apd-config-margin .apd-value')\n    this.template.$fontSizeSlider = this.query('.apd-config-fontSize .apd-slider')\n    this.template.$fontSizeValue = this.query('.apd-config-fontSize .apd-value')\n    this.template.$speedSlider = this.query('.apd-config-speed .apd-slider')\n    this.template.$speedValue = this.query('.apd-config-speed .apd-value')\n    this.template.$input = this.query('.apd-input')\n    this.template.$send = this.query('.apd-send')\n\n    const { $toggle } = this.template\n\n    this.art.on('artplayerPluginDanmuku:show', () => {\n      tooltip($toggle, '关闭弹幕')\n    })\n\n    this.art.on('artplayerPluginDanmuku:hide', () => {\n      tooltip($toggle, '打开弹幕')\n    })\n  }\n\n  createEvents() {\n    const { $toggle, $configModes, $styleModes, $colors, $antiOverlap, $syncVideo, $send, $input } = this.template\n\n    this.art.proxy($toggle, 'click', () => {\n      this.danmuku.config({\n        visible: !this.option.visible,\n      })\n      this.reset()\n    })\n\n    this.art.proxy($configModes, 'click', (event) => {\n      const $mode = event.target.closest('.apd-mode')\n      if (!$mode)\n        return\n      const mode = Number($mode.dataset.mode)\n      if (this.option.modes.includes(mode)) {\n        this.danmuku.config({\n          modes: this.option.modes.filter(m => m !== mode),\n        })\n      }\n      else {\n        this.danmuku.config({\n          modes: [...this.option.modes, mode],\n        })\n      }\n      this.reset()\n    })\n\n    this.art.proxy($antiOverlap, 'click', () => {\n      this.danmuku.config({\n        antiOverlap: !this.option.antiOverlap,\n      })\n      this.reset()\n    })\n\n    this.art.proxy($syncVideo, 'click', () => {\n      this.danmuku.config({\n        synchronousPlayback: !this.option.synchronousPlayback,\n      })\n      this.reset()\n    })\n\n    this.art.proxy($styleModes, 'click', (event) => {\n      const $mode = event.target.closest('.apd-mode')\n      if (!$mode)\n        return\n      const mode = Number($mode.dataset.mode)\n      this.danmuku.config({\n        mode,\n      })\n      this.reset()\n    })\n\n    this.art.proxy($colors, 'click', (event) => {\n      const $color = event.target.closest('.apd-color')\n      if (!$color)\n        return\n      this.danmuku.config({\n        color: $color.dataset.color,\n      })\n      this.reset()\n    })\n\n    this.art.proxy($send, 'click', () => this.emit())\n\n    this.art.proxy($input, 'keypress', (event) => {\n      if (event.key === 'Enter') {\n        event.preventDefault()\n        this.emit()\n      }\n    })\n  }\n\n  createSliders() {\n    this.slider.opacity = this.createSlider({\n      ...this.OPACITY,\n      container: this.template.$opacitySlider,\n      findIndex: () => {\n        return Math.round(this.option.opacity * 100)\n      },\n      onChange: (index) => {\n        const { $opacityValue } = this.template\n        $opacityValue.textContent = `${index}%`\n        this.danmuku.config({\n          opacity: index / 100,\n        })\n      },\n    })\n\n    this.slider.margin = this.createSlider({\n      ...this.MARGIN,\n      container: this.template.$marginSlider,\n      findIndex: () => {\n        return this.MARGIN.steps.findIndex(\n          item => item.value[0] === this.option.margin[0] && item.value[1] === this.option.margin[1],\n        )\n      },\n      onChange: (index) => {\n        const margin = this.MARGIN.steps[index]\n        if (!margin)\n          return\n        const { $marginValue } = this.template\n        $marginValue.textContent = margin.name\n        this.danmuku.config({\n          margin: margin.value,\n        })\n      },\n    })\n\n    this.slider.fontSize = this.createSlider({\n      ...this.FONT_SIZE,\n      container: this.template.$fontSizeSlider,\n      findIndex: () => {\n        return this.danmuku.fontSize\n      },\n      onChange: (index) => {\n        const { $fontSizeValue } = this.template\n        $fontSizeValue.textContent = `${index}px`\n        if (index === this.danmuku.fontSize)\n          return\n        this.danmuku.config({\n          fontSize: index,\n        })\n      },\n    })\n\n    this.slider.speed = this.createSlider({\n      ...this.SPEED,\n      container: this.template.$speedSlider,\n      findIndex: () => {\n        return this.SPEED.steps.findIndex(item => item.value === this.option.speed)\n      },\n      onChange: (index) => {\n        const speed = this.SPEED.steps[index]\n        if (!speed)\n          return\n        const { $speedValue } = this.template\n        $speedValue.textContent = speed.name\n        this.danmuku.config({\n          speed: speed.value,\n        })\n      },\n    })\n  }\n\n  createSlider({ min, max, container, findIndex, onChange, steps = [] }) {\n    const { query, clamp, setStyle } = this.utils\n\n    setStyle(container, 'touch-action', 'none')\n\n    container.innerHTML = `\n            <div class=\"apd-slider-line\">\n                <div class=\"apd-slider-points\">\n                    ${steps.map(() => `<div class=\"apd-slider-point\"></div>`).join('')}\n                </div>\n                <div class=\"apd-slider-progress\"></div>\n            </div>\n            <div class=\"apd-slider-dot\"></div>\n            <div class=\"apd-slider-steps\">\n                ${steps.map(step => (step.hide ? '' : `<div class=\"apd-slider-step\">${step.name}</div>`)).join('')}\n            </div>\n        `\n\n    const $dot = query('.apd-slider-dot', container)\n    const $progress = query('.apd-slider-progress', container)\n\n    let isDroging = false\n\n    function reset(index = findIndex()) {\n      if (index < min || index > max)\n        return\n      const percentage = (index - min) / (max - min)\n      $dot.style.left = `${percentage * 100}%`\n      if (steps.length === 0) {\n        $progress.style.width = $dot.style.left\n      }\n      onChange(index)\n    }\n\n    function updateLeft(event) {\n      const { top, height, left, width } = container.getBoundingClientRect()\n      if (this.art.isRotate) {\n        const value = clamp(event.clientY - top, 0, height)\n        const index = Math.round((value / height) * (max - min) + min)\n        reset(index)\n      }\n      else {\n        const value = clamp(event.clientX - left, 0, width)\n        const index = Math.round((value / width) * (max - min) + min)\n        reset(index)\n      }\n    }\n\n    this.art.proxy(container, 'click', (event) => {\n      updateLeft.call(this, event)\n    })\n\n    this.art.proxy(container, 'pointerdown', (event) => {\n      isDroging = event.button === 0\n    })\n\n    this.art.on('document:pointermove', (event) => {\n      if (isDroging) {\n        updateLeft.call(this, event)\n      }\n    })\n\n    this.art.on('document:pointerup', (event) => {\n      if (isDroging) {\n        isDroging = false\n        updateLeft.call(this, event)\n      }\n    })\n\n    return { reset }\n  }\n\n  onFullscreen(state) {\n    const { $danmuku, $controlsCenter, $mount } = this.template\n    if (this.outside) {\n      if (state) {\n        this.append($controlsCenter, $danmuku)\n      }\n      else {\n        this.append($mount, $danmuku)\n      }\n    }\n    else {\n      this.append($controlsCenter, $danmuku)\n    }\n  }\n\n  onMouseEnter({ $control, $panel }) {\n    const { $player } = this.art.template\n    const controlRect = $control.getBoundingClientRect()\n    const panelRect = $panel.getBoundingClientRect()\n    const playerRect = $player.getBoundingClientRect()\n\n    const half = panelRect.width / 2 - controlRect.width / 2\n    const left = playerRect.left - (controlRect.left - half)\n    const right = controlRect.right + half - playerRect.right\n\n    if (left > 0) {\n      $panel.style.left = `${-half + left}px`\n    }\n    else if (right > 0) {\n      $panel.style.left = `${-half - right}px`\n    }\n    else {\n      $panel.style.left = `${-half}px`\n    }\n  }\n\n  async emit() {\n    const { $input } = this.template\n\n    const text = $input.value.trim()\n    if (!text.length)\n      return\n    if (this.isLock)\n      return\n    if (this.emitting)\n      return\n\n    const danmu = {\n      text,\n      mode: this.option.mode,\n      color: this.option.color,\n      time: this.art.currentTime,\n    }\n\n    try {\n      this.emitting = true\n      const state = await this.option.beforeEmit(danmu)\n      this.emitting = false\n\n      if (state !== true)\n        return\n\n      danmu.border = true\n      delete danmu.time\n      this.danmuku.emit(danmu)\n      $input.value = ''\n\n      this.lock()\n    }\n    catch (error) {\n      console.error('Error emitting danmuku:', error)\n      this.emitting = false\n    }\n  }\n\n  lock() {\n    const { addClass } = this.utils\n    const { $send } = this.template\n\n    this.isLock = true\n    let time = this.option.lockTime\n    $send.textContent = time\n    addClass($send, 'apd-lock')\n\n    const loop = () => {\n      this.timer = setTimeout(() => {\n        if (time === 0) {\n          this.unlock()\n        }\n        else {\n          time -= 1\n          $send.textContent = time\n          loop()\n        }\n      }, 1000)\n    }\n\n    loop()\n  }\n\n  unlock() {\n    const { removeClass } = this.utils\n    const { $send } = this.template\n    clearTimeout(this.timer)\n    this.isLock = false\n    $send.textContent = '发送'\n    removeClass($send, 'apd-lock')\n  }\n\n  resize() {\n    if (this.outside)\n      return\n    if (this.art.fullscreen)\n      return\n    if (this.art.fullscreenWeb)\n      return\n    const { $player, $controlsCenter } = this.art.template\n    const { $danmuku } = this.template\n    if (this.art.width < this.option.width) {\n      this.append($player, $danmuku)\n    }\n    else {\n      this.append($controlsCenter, $danmuku)\n    }\n  }\n\n  reset() {\n    const { inverseClass, tooltip } = this.utils\n    const { $toggle, $colors } = this.template\n\n    this.slider.opacity.reset()\n    this.slider.margin.reset()\n    this.slider.fontSize.reset()\n    this.slider.speed.reset()\n\n    this.setData('danmukuVisible', this.option.visible)\n    this.setData('danmukuMode', this.option.mode)\n    this.setData('danmukuColor', this.option.color)\n    this.setData('danmukuMode0', this.option.modes.includes(0))\n    this.setData('danmukuMode1', this.option.modes.includes(1))\n    this.setData('danmukuMode2', this.option.modes.includes(2))\n    this.setData('danmukuAntiOverlap', this.option.antiOverlap)\n    this.setData('danmukuSyncVideo', this.option.synchronousPlayback)\n    this.setData('danmukuTheme', this.option.theme)\n    this.setData('danmukuEmitter', this.option.emitter)\n\n    const colors = $colors.children\n    const $color = Array.from(colors).find(item => item.dataset.color === this.option.color.toUpperCase())\n    $color && inverseClass($color, 'apd-active')\n\n    tooltip($toggle, this.option.visible ? '关闭弹幕' : '打开弹幕')\n\n    this.resize()\n  }\n\n  mount(target) {\n    const { errorHandle } = this.utils\n    const $el = typeof target === 'string' ? document.querySelector(target) : target\n    errorHandle($el, `Can not find the mount point: ${target}`)\n    this.append($el, this.template.$danmuku)\n    this.template.$mount = $el\n    this.reset()\n  }\n}\n\nif (typeof document !== 'undefined') {\n  const id = 'artplayer-plugin-danmuku'\n  let $style = document.getElementById(id)\n  if (!$style) {\n    $style = document.createElement('style')\n    $style.id = id\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', () => {\n        document.head.appendChild($style)\n      })\n    }\n    else {\n      (document.head || document.documentElement).appendChild($style)\n    }\n  }\n  $style.textContent = style\n}\n","module.exports = \"c28963a4f139517c\";","module.exports = \"469338a744265a8b\";","module.exports = \"90842e11c6ecb43a\";","module.exports = \"e82600b1fd4599fb\";","module.exports = \"c3722bee49d765b2\";","module.exports = \"8cf82700f8fc43c1\";","module.exports = \"6cb45dc0e743e136\";","module.exports = \"4701a5f85dec4373\";","module.exports = \"223c9b9278a2222a\";","module.exports = \"ff1da11f96e97480\";","module.exports = \"c150a54789fb9dce\";","module.exports = \"cb2b742af8ffaef9\";","module.exports = \"606fae5003b81d5f\";"],"names":[],"version":3,"file":"index.js.map","sourceRoot":"../../../"}